- name: '@timestamp'
  level: core
  required: true
  type: date
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the event was generated by the source.

    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
  default_field: true
- name: message
  level: core
  type: match_only_text
  description: 'For log events the message field contains the log message, optimized for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
  default_field: true
- name: Target
  title: Target
  group: 2
  description: 'These fields contain information about a target.

    These fields provide more context about the target process and thread that are related to the data in the document. Useful in a security context where a target process or thread may be acted on by another process or thread.'
  type: group
  default_field: true
  fields:
    - name: process.Ext
      level: custom
      type: object
      object_type: keyword
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.Ext.memory_region.allocation_base
      level: custom
      type: unsigned_long
      description: Base address of the memory allocation containing the memory region.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.allocation_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original memory protection requested when the memory was allocated. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: process.Ext.memory_region.allocation_size
      level: custom
      type: unsigned_long
      description: Original memory size requested when the memory was allocated.
      example: 4096
      default_field: false
    - name: process.Ext.memory_region.allocation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The memory allocation type. Example values include "IMAGE", "MAPPED", and "PRIVATE".
      example: PRIVATE
      default_field: false
    - name: process.Ext.memory_region.bytes_address
      level: custom
      type: unsigned_long
      description: The address where bytes_compressed begins.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.bytes_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of bytes_address the memory allocation. Equal to bytes_address - allocation_base.
      example: 0
      default_field: false
    - name: process.Ext.memory_region.bytes_compressed
      level: custom
      type: keyword
      description: Up to 4MB of raw data from the memory allocation. This is compressed with zlib.To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      example: eJzzSM3JyVcIzy/KSVEEABxJBD4=
      index: false
      doc_values: false
      default_field: false
    - name: process.Ext.memory_region.bytes_compressed_present
      level: custom
      type: boolean
      description: Whether bytes_compressed is present in this event.
      example: false
      default_field: false
    - name: process.Ext.memory_region.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: The sha256 of the memory region.
      example: d25ff1e6c6460a7f9de39198d182058c1712726008d187e1953b83abe977e4a0
      default_field: false
    - name: process.Ext.memory_region.malware_signature.all_names
      level: custom
      type: keyword
      ignore_above: 1024
      description: A sequence of signature names matched.
      example: Windows.EICAR.Not-a-virus
      default_field: false
    - name: process.Ext.memory_region.malware_signature.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: malware signature identifier
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary
      level: custom
      type: object
      object_type: keyword
      description: The first matching details.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.matches
      level: custom
      type: keyword
      description: The first matching details.
      index: false
      doc_values: false
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.hash
      level: custom
      type: nested
      description: hash of file matching signature.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: sha256 hash of file matching signature.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: The id of the first yara rule matched.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the first yara rule matched.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.secondary
      level: custom
      type: nested
      description: Additional matching details if available.
      enabled: false
      default_field: false
    - name: process.Ext.memory_region.malware_signature.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: malware signature version
      default_field: false
    - name: process.Ext.memory_region.mapped_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: If the memory corresponds to a file mapping, this is the file's path.
      example: C:\Windows\System32\mshtml.dll
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.dotnet
      level: custom
      type: boolean
      description: Whether this file is a .NET PE
      example: 'true'
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections
      level: custom
      type: object
      object_type: keyword
      description: The file's relevant sections, if it is a PE
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.sections.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The section's name
      example: .reloc
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams
      level: custom
      type: object
      object_type: keyword
      description: The file's streams, if it is a PE
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.Ext.streams.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The stream's name
      example: .reloc
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.go_import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        The algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).'
      example: 10bddcb4cee42080f76c88d9ff964491
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.go_imports
      level: extended
      type: flattened
      description: List of imported Go language element names and types.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.go_imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.go_imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.go_stripped
      level: extended
      type: boolean
      description: Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        This is a synonym for imphash.'
      example: d41d8cd98f00b204e9800998ecf8427e
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.pehash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.

        Learn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.'
      example: 73ff189b63cd6be375a7ff25179a38d347651975
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the PE file.

        The keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.'
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: PE Section List name.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: PE Section List physical size.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections.var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the section.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.sections.virtual_size
      level: extended
      type: long
      format: string
      description: PE Section List virtual size. This is always the same as `physical_size`.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe_detected
      level: custom
      type: boolean
      description: Whether the file at mapped_path is an executable.
      example: false
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.dotnet
      level: custom
      type: boolean
      description: Whether this file is a .NET PE
      example: 'true'
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections
      level: custom
      type: object
      object_type: keyword
      description: The file's relevant sections, if it is a PE
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.sections.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The section's name
      example: .reloc
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams
      level: custom
      type: object
      object_type: keyword
      description: The file's streams, if it is a PE
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.Ext.streams.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The stream's name
      example: .reloc
      default_field: false
    - name: process.Ext.memory_region.memory_pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: process.Ext.memory_region.memory_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.memory_region.memory_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.Ext.memory_region.memory_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.Ext.memory_region.memory_pe.go_import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        The algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).'
      example: 10bddcb4cee42080f76c88d9ff964491
      default_field: false
    - name: process.Ext.memory_region.memory_pe.go_imports
      level: extended
      type: flattened
      description: List of imported Go language element names and types.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.go_imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.go_imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.go_stripped
      level: extended
      type: boolean
      description: Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.Ext.memory_region.memory_pe.import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        This is a synonym for imphash.'
      example: d41d8cd98f00b204e9800998ecf8427e
      default_field: false
    - name: process.Ext.memory_region.memory_pe.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.Ext.memory_region.memory_pe.pehash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.

        Learn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.'
      example: 73ff189b63cd6be375a7ff25179a38d347651975
      default_field: false
    - name: process.Ext.memory_region.memory_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the PE file.

        The keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.'
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: PE Section List name.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: PE Section List physical size.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections.var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the section.
      default_field: false
    - name: process.Ext.memory_region.memory_pe.sections.virtual_size
      level: extended
      type: long
      format: string
      description: PE Section List virtual size. This is always the same as `physical_size`.
      default_field: false
    - name: process.Ext.memory_region.memory_pe_detected
      level: custom
      type: boolean
      description: Whether an executable file was found in memory.
      example: false
      default_field: false
    - name: process.Ext.memory_region.region_base
      level: custom
      type: unsigned_long
      description: Base address of the memory region.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.region_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection of the memory region. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: process.Ext.memory_region.region_size
      level: custom
      type: unsigned_long
      description: Size of the memory region.
      example: 4096
      default_field: false
    - name: process.Ext.memory_region.region_state
      level: custom
      type: keyword
      ignore_above: 1024
      description: State of the memory region. Example values include "RESERVE", "COMMIT", and "FREE".
      example: COMMIT
      default_field: false
    - name: process.Ext.memory_region.strings
      level: custom
      type: keyword
      description: Array of strings found within the memory region.
      index: false
      doc_values: false
      default_field: false
    - name: process.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: process.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: process.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: process.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: process.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
- name: data_stream
  title: data_stream
  group: 2
  description: Fields describing the new indexing strategy <type>-<dataset>-<namespace>
  type: group
  default_field: true
  fields:
    - name: dataset
      level: custom
      type: constant_keyword
      description: Data stream dataset name.
      example: nginx.access
      default_field: false
    - name: namespace
      level: custom
      type: constant_keyword
      description: Data stream namespace.
      example: production
      default_field: false
    - name: type
      level: custom
      type: constant_keyword
      description: Data stream type.
      example: logs
      default_field: false
- name: ecs
  title: ECS
  group: 2
  description: Meta-information specific to ECS.
  type: group
  default_field: true
  fields:
    - name: version
      level: core
      required: true
      type: keyword
      ignore_above: 1024
      description: 'ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.

        When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.'
      example: 1.0.0
- name: event
  title: Event
  group: 2
  description: 'The event fields are used for context information about the log or metric event itself.

    A log is defined as an event containing details of something that happened. Log events must include the time at which the thing happened. Examples of log events include a process starting on a host, a network packet being sent from a source to a destination, or a network connection between a client and a server being initiated or closed. A metric is defined as an event containing one or more numerical measurements and the time at which the measurement was taken. Examples of metric events include memory pressure measured on a host and device temperature. See the `event.kind` definition in this section for additional details about metric and state events.'
  type: group
  default_field: true
  fields:
    - name: action
      level: core
      type: keyword
      ignore_above: 1024
      description: 'The action captured by the event.

        This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.'
      example: user-password-change
    - name: category
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.

        `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.

        This field is an array. This will allow proper categorization of some events that fall in multiple categories.'
      example: authentication
    - name: created
      level: core
      type: date
      description: '`event.created` contains the date/time when the event was first read by an agent, or by your pipeline.

        This field is distinct from `@timestamp` in that `@timestamp` typically contain the time extracted from the original event.

        In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent''s or pipeline''s ability to keep up with your event source.

        In case the two timestamps are identical, `@timestamp` should be used.'
      example: '2016-05-23T08:05:34.857Z'
    - name: end
      level: extended
      type: date
      description: '`event.end` contains the date when the event ended or when the activity was last observed.'
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.
      example: 123456789012345678901234567890ABCD
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique ID to describe the event.
      example: 8a4f500d
    - name: ingested
      level: core
      type: date
      description: 'Timestamp when an event arrived in the central data store.

        This is different from `@timestamp`, which is when the event originally occurred.  It''s also different from `event.created`, which is meant to capture the first time an agent saw the event.

        In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.'
      example: '2016-05-23T08:05:35.101Z'
      default_field: false
    - name: outcome
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.

        `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.

        Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.

        Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.

        Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.'
      example: success
    - name: start
      level: extended
      type: date
      description: '`event.start` contains the date when the event started or when the activity was first observed.'
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.

        `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.

        This field is an array. This will allow proper categorization of some events that fall in multiple event types.'
- name: host
  title: Host
  group: 2
  description: 'A host is defined as a general computing instance.

    ECS host.* fields should be populated with details about the host on which the event happened, or from which the measurement was taken. Host types include hardware, virtual machines, Docker containers, and Kubernetes nodes.'
  type: group
  default_field: true
  fields:
    - name: architecture
      level: core
      type: keyword
      ignore_above: 1024
      description: Operating system architecture.
      example: x86_64
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the domain of which the host is a member.

        For example, on Windows this could be the host''s Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host''s LDAP provider.'
      example: CONTOSO
      default_field: false
    - name: hostname
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Hostname of the host.

        It normally contains what the `hostname` command returns on the host machine.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Unique host id.

        As hostname is not always unique, use values that are meaningful in your environment.

        Example: The current usage of `beat.name`.'
    - name: ip
      level: core
      type: ip
      description: Host ip addresses.
    - name: mac
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Host MAC addresses.

        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.'
      example: '["00-00-5E-00-53-23", "00-00-5E-00-53-24"]'
      pattern: ^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the host.

        It can contain what hostname returns on Unix systems, the fully qualified domain name (FQDN), or a name specified by the user. The recommended value is the lowercase FQDN of the host.'
    - name: os.Ext
      level: custom
      type: object
      object_type: keyword
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: os.Ext.variant
      level: custom
      type: keyword
      ignore_above: 1024
      description: A string value or phrase that further aid to classify or qualify the operating system (OS).  For example the distribution for a Linux OS will be entered in this field.
      example: Ubuntu
      default_field: false
    - name: os.family
      level: extended
      type: keyword
      ignore_above: 1024
      description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
    - name: os.full
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
          default_field: false
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, including the version or code name.
      example: Mac OS Mojave
    - name: os.kernel
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
    - name: os.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
          default_field: false
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, without the version.
      example: Mac OS X
    - name: os.platform
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
    - name: os.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Use the `os.type` field to categorize the operating system into one of the broad commercial families.

        If the OS you''re dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.'
      example: macos
      default_field: false
    - name: os.version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system version as a raw string.
      example: 10.14.1
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Type of host.

        For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.'
    - name: uptime
      level: extended
      type: long
      description: Seconds the host has been up.
      example: 1325
- name: process
  title: Process
  group: 2
  description: 'These fields contain information about a process.

    These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.'
  type: group
  default_field: true
  fields:
    - name: Ext
      level: custom
      type: object
      object_type: keyword
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.ancestry
      level: custom
      type: keyword
      ignore_above: 1024
      description: An array of entity_ids indicating the ancestors for this event
      default_field: false
    - name: Ext.api.behaviors
      level: custom
      type: keyword
      ignore_above: 1024
      description: "A list of observed behaviors.\n  \"cross-process\" - the observed activity was between two processes\n  \"parent-child\" - the observed activity was between a parent process and its child\n  \"native_api\" - a call was made directly to the Native API rather than the Win32 API\n  \"direct_syscall\" - a syscall instruction originated outside of the Native API layer\n  \"proxy_call\" - the call stack may indicate of a proxied API call to mask the true source\n  \"sensitive_api\" - executable non-image memory is unexpectedly calling a sensitive API\n  \"shellcode\" - suspicious executable non-image memory is calling a sensitive API\n  \"image_hooked\" - an entry in the callstack appears to have been hooked\n  \"image_indirect_call\" - an entry in the callstack was preceded by a call to a dynamically resolved function\n  \"image_rop\" - no call instruction preceded an entry in the call stack\n  \"image_rwx\" - an entry in the callstack is writable\n  \"unbacked_rwx\" - an entry in the callstack is non-image and writable\n  \"allocate_shellcode\" - a region of non-image executable memory allocated more executable memory\n  \"execute_fluctuation\" - the PAGE_EXECUTE protection is unexpectedly fluctuating\n  'write_fluctuation\" - the PAGE_WRITE protection of executable memory is unexpectedly fluctuating\n  \"hook_api\" - a change to the memory protection of a small executable image memory region was made\n  \"hollow_image\" - a change to the memory protection of a large executable image memory region was made\n  \"hook_unbacked\" - a change to the memory protection of a small executable non-image memory was made\n  'hollow_unbacked\" - a change to the memory protection of a large executable non-image memory was made\n  \"guarded_code\" - executable memory was unexpectedly marked as PAGE_GUARD\n  \"hidden_code\" - executable memory was unexpectedly marked as PAGE_NOACCESS\n  \"execute_shellcode\" - a region of non-image executable memory was unexpectedly transferred control\n  \"hardware_breakpoint_set\" - a hardware breakpoint was set\n  \"rapid_background_polling\" - a suspicious process which does rapid input polling via GetAsyncKeyState API was observed\n  \"multiple_polling_processes\" - multiple suspicious processes which do rapid input polling via the GetAsyncKeyState API were observed"
      example:
        - cross-process
        - rapid_background_polling
        - multiple_polling_processes
        - native_api
        - shellcode
      default_field: false
    - name: Ext.api.metadata
      level: custom
      type: object
      object_type: keyword
      description: Information related to the API call.
      default_field: false
    - name: Ext.api.metadata.allocation_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection attributes associated with the starting address of a thread.
      example: RCX
      default_field: false
    - name: Ext.api.metadata.background_callcount
      level: custom
      type: unsigned_long
      description: This parameter indicates a number of all GetAsyncKeyState api calls, including unsuccessfull calls, between the last successfull GetAsyncKeyState call.
      example: 6021
      default_field: false
    - name: Ext.api.metadata.module_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the module associated with the starting address of a thread.
      example: C:\Windows\System32\DellTPad\ApMsgFwd.exe
      default_field: false
    - name: Ext.api.metadata.ms_since_last_keyevent
      level: custom
      type: unsigned_long
      description: This parameter indicates an elapsed time in milliseconds between the last GetAsyncKeyState event.
      example: 94
      default_field: false
    - name: Ext.api.metadata.procedure_symbol
      level: custom
      type: keyword
      ignore_above: 1024
      description: Summary of the hook procedure.
      example: taskbar.dll
      default_field: false
    - name: Ext.api.metadata.return_value
      level: custom
      type: unsigned_long
      description: Return value of RegisterRawInputDevices API call.
      example: 1
      default_field: false
    - name: Ext.api.metadata.target_address_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the memory region targeted by the API call.
      example: Unbacked
      default_field: false
    - name: Ext.api.metadata.target_address_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: The path of the memory region targeted by the API call.
      example: C:\programdata\example.dll
      default_field: false
    - name: Ext.api.metadata.thread_info_flags
      level: custom
      type: unsigned_long
      description: Thread info flags.
      example: 16
      default_field: false
    - name: Ext.api.metadata.visible_windows_count
      level: custom
      type: unsigned_long
      description: Number of visible windows owned by the caller thread.
      example: 0
      default_field: false
    - name: Ext.api.metadata.windows_count
      level: custom
      type: unsigned_long
      description: Number of windows owned by the caller thread.
      example: 2
      default_field: false
    - name: Ext.api.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the API, usually the name of the function or system call.
      example: VirtualAlloc
      default_field: false
    - name: Ext.api.parameters
      level: custom
      type: object
      object_type: keyword
      description: Parameter values passed to the API call.
      default_field: false
    - name: Ext.api.parameters.address
      level: custom
      type: unsigned_long
      description: The target memory address.
      example: 2431737462784
      default_field: false
    - name: Ext.api.parameters.allocation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The type of memory allocation. Corresponds to `MEMORY_BASIC_INFORMATION.State`
      example: COMMIT|RESERVE
      default_field: false
    - name: Ext.api.parameters.argument1
      level: custom
      type: unsigned_long
      description: The first argument to the procedure.
      example: 1
      default_field: false
    - name: Ext.api.parameters.argument2
      level: custom
      type: unsigned_long
      description: The second argument to the procedure.
      example: 2
      default_field: false
    - name: Ext.api.parameters.argument3
      level: custom
      type: unsigned_long
      description: The third argument to the procedure.
      example: 3
      default_field: false
    - name: Ext.api.parameters.context_flags
      level: custom
      type: unsigned_long
      description: The bitmask of CPU registers operated on by this call. Corresponds to `CONTEXT.ContextFlags`
      example: 1048607
      default_field: false
    - name: Ext.api.parameters.desired_access
      level: custom
      type: keyword
      ignore_above: 1024
      description: This parameter indicates the string value of the `DesiredAccess` field  to `OpenProcess` or `OpenThread`.
      default_field: false
    - name: Ext.api.parameters.desired_access_numeric
      level: custom
      type: long
      description: This parameter indicates the numeric value of the `DesiredAccess` field passed to `OpenProcess` or `OpenThread`.
      default_field: false
    - name: Ext.api.parameters.device
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the device object.
      example: \Device\NPCAP
      default_field: false
    - name: Ext.api.parameters.driver
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the driver object.
      example: \Driver\npcap
      default_field: false
    - name: Ext.api.parameters.eax
      level: custom
      type: unsigned_long
      description: The x86 EAX general purpose register. Return value in __cdecl, __stdcall, __thiscall and __fastcall.
      example: 0
      default_field: false
    - name: Ext.api.parameters.ebp
      level: custom
      type: unsigned_long
      description: The x86 EBP frame pointer register.
      example: 15006644
      default_field: false
    - name: Ext.api.parameters.ebx
      level: custom
      type: unsigned_long
      description: The x86 EBX general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.ecx
      level: custom
      type: unsigned_long
      description: The x86 ECX general purpose register. First argument in __fastcall and __thiscall.
      example: 0
      default_field: false
    - name: Ext.api.parameters.edi
      level: custom
      type: unsigned_long
      description: The x86 EDI general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.edx
      level: custom
      type: unsigned_long
      description: The x86 EDX general purpose register. Second argument in a __fastcall.
      example: 0
      default_field: false
    - name: Ext.api.parameters.eip
      level: custom
      type: unsigned_long
      description: The x86 EIP instruction pointer register.
      example: 1472790528
      default_field: false
    - name: Ext.api.parameters.esi
      level: custom
      type: unsigned_long
      description: The x86 ESI general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.esp
      level: custom
      type: unsigned_long
      description: The x86 ESP stack pointer register.
      example: 15007744
      default_field: false
    - name: Ext.api.parameters.flags
      level: custom
      type: keyword
      ignore_above: 1024
      description: Mode flag that specifies how to interpret the information provided by UsagePage and Usage. Third member RAWINPUTDEVICE structure.
      example: INPUTSINK
      default_field: false
    - name: Ext.api.parameters.handle_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: This parameter indicates whether the detected access was attempt against a process or a thread.
      example: process
      default_field: false
    - name: Ext.api.parameters.hook_module
      level: custom
      type: keyword
      ignore_above: 1024
      description: DLL containing the hook procedure.
      example: c:\windows\system32\taskbar.dll
      default_field: false
    - name: Ext.api.parameters.hook_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of hook procedure to be installed.
      example: WH_KEYBOARD_LL
      default_field: false
    - name: Ext.api.parameters.procedure
      level: custom
      type: unsigned_long
      description: The memory address of the procedure or function.
      example: 2431737462784
      default_field: false
    - name: Ext.api.parameters.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: The memory protection for the region of pages. Corresponds to `MEMORY_BASIC_INFORMATION.Protect`
      example: RWX|GUARD
      default_field: false
    - name: Ext.api.parameters.protection_old
      level: custom
      type: keyword
      ignore_above: 1024
      description: The previous memory protection returned by the API call. Corresponds to `MEMORY_BASIC_INFORMATION.Protect`
      example: RCX
      default_field: false
    - name: Ext.api.parameters.r8
      level: custom
      type: unsigned_long
      description: The x64 R8 general purpose register. Third argument in a __fastcall.
      example: 3
      default_field: false
    - name: Ext.api.parameters.r9
      level: custom
      type: unsigned_long
      description: The x64 R9 general purpose register. Fourth argument in a __fastcall.
      example: 4
      default_field: false
    - name: Ext.api.parameters.rax
      level: custom
      type: unsigned_long
      description: The x64 RAX general purpose register. Return value in a __fastcall.
      example: 0
      default_field: false
    - name: Ext.api.parameters.rbp
      level: custom
      type: unsigned_long
      description: The x64 RBP general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.rbx
      level: custom
      type: keyword
      ignore_above: 1024
      description: The x64 RBX general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.rcx
      level: custom
      type: unsigned_long
      description: The x64 RCX general purpose register. First argument in a __fastcall.
      example: 1
      default_field: false
    - name: Ext.api.parameters.rdi
      level: custom
      type: unsigned_long
      description: The x64 RDI general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.rdx
      level: custom
      type: unsigned_long
      description: The x64 RDX general purpose register. Second argument in a __fastcall.
      example: 2
      default_field: false
    - name: Ext.api.parameters.rip
      level: custom
      type: unsigned_long
      description: The x64 RIP instruction pointer register.
      example: 140706153693184
      default_field: false
    - name: Ext.api.parameters.rsi
      level: custom
      type: keyword
      ignore_above: 1024
      description: The x64 RSI general purpose register.
      example: 0
      default_field: false
    - name: Ext.api.parameters.rsp
      level: custom
      type: unsigned_long
      description: The x64 RSP stack pointer register.
      example: 2431737462784
      default_field: false
    - name: Ext.api.parameters.size
      level: custom
      type: unsigned_long
      description: The size.
      example: 4096
      default_field: false
    - name: Ext.api.parameters.usage
      level: custom
      type: keyword
      ignore_above: 1024
      description: This parameter indicates the specific device (Usage) within the Usage Page. Second member RAWINPUTDEVICE structure.
      example: KEYBOARD
      default_field: false
    - name: Ext.api.parameters.usage_page
      level: custom
      type: keyword
      ignore_above: 1024
      description: This parameter indicates the top-level collection (Usage Page) of the device. First member RAWINPUTDEVICE structure.
      example: GENERIC
      default_field: false
    - name: Ext.api.summary
      level: custom
      type: keyword
      ignore_above: 1024
      description: The summary of the API call and its parameters.
      example: VirtualAllocEx( file.exe, NULL, 0x42000, COMMIT|RESERVE, RWX )
      default_field: false
    - name: Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.memory_region.allocation_base
      level: custom
      type: unsigned_long
      description: Base address of the memory allocation containing the memory region.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.allocation_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original memory protection requested when the memory was allocated. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: Ext.memory_region.allocation_size
      level: custom
      type: unsigned_long
      description: Original memory size requested when the memory was allocated.
      example: 4096
      default_field: false
    - name: Ext.memory_region.allocation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The memory allocation type. Example values include "IMAGE", "MAPPED", and "PRIVATE".
      example: PRIVATE
      default_field: false
    - name: Ext.memory_region.bytes_address
      level: custom
      type: unsigned_long
      description: The address where bytes_compressed begins.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.bytes_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of bytes_address the memory allocation. Equal to bytes_address - allocation_base.
      example: 0
      default_field: false
    - name: Ext.memory_region.bytes_compressed
      level: custom
      type: keyword
      description: Up to 4MB of raw data from the memory allocation. This is compressed with zlib.To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      example: eJzzSM3JyVcIzy/KSVEEABxJBD4=
      index: false
      doc_values: false
      default_field: false
    - name: Ext.memory_region.bytes_compressed_present
      level: custom
      type: boolean
      description: Whether bytes_compressed is present in this event.
      example: false
      default_field: false
    - name: Ext.memory_region.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: The sha256 of the memory region.
      example: d25ff1e6c6460a7f9de39198d182058c1712726008d187e1953b83abe977e4a0
      default_field: false
    - name: Ext.memory_region.malware_signature.all_names
      level: custom
      type: keyword
      ignore_above: 1024
      description: A sequence of signature names matched.
      example: Windows.EICAR.Not-a-virus
      default_field: false
    - name: Ext.memory_region.malware_signature.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: malware signature identifier
      default_field: false
    - name: Ext.memory_region.malware_signature.primary
      level: custom
      type: object
      object_type: keyword
      description: The first matching details.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.matches
      level: custom
      type: keyword
      description: The first matching details.
      index: false
      doc_values: false
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.hash
      level: custom
      type: nested
      description: hash of file matching signature.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: sha256 hash of file matching signature.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: The id of the first yara rule matched.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the first yara rule matched.
      default_field: false
    - name: Ext.memory_region.malware_signature.secondary
      level: custom
      type: nested
      description: Additional matching details if available.
      enabled: false
      default_field: false
    - name: Ext.memory_region.malware_signature.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: malware signature version
      default_field: false
    - name: Ext.memory_region.mapped_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: If the memory corresponds to a file mapping, this is the file's path.
      example: C:\Windows\System32\mshtml.dll
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.dotnet
      level: custom
      type: boolean
      description: Whether this file is a .NET PE
      example: 'true'
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections
      level: custom
      type: object
      object_type: keyword
      description: The file's relevant sections, if it is a PE
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.sections.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The section's name
      example: .reloc
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams
      level: custom
      type: object
      object_type: keyword
      description: The file's streams, if it is a PE
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: Ext.memory_region.mapped_pe.Ext.streams.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The stream's name
      example: .reloc
      default_field: false
    - name: Ext.memory_region.mapped_pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: Ext.memory_region.mapped_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: Ext.memory_region.mapped_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: Ext.memory_region.mapped_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: Ext.memory_region.mapped_pe.go_import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        The algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).'
      example: 10bddcb4cee42080f76c88d9ff964491
      default_field: false
    - name: Ext.memory_region.mapped_pe.go_imports
      level: extended
      type: flattened
      description: List of imported Go language element names and types.
      default_field: false
    - name: Ext.memory_region.mapped_pe.go_imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: Ext.memory_region.mapped_pe.go_imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: Ext.memory_region.mapped_pe.go_stripped
      level: extended
      type: boolean
      description: Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.
      default_field: false
    - name: Ext.memory_region.mapped_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: Ext.memory_region.mapped_pe.import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        This is a synonym for imphash.'
      example: d41d8cd98f00b204e9800998ecf8427e
      default_field: false
    - name: Ext.memory_region.mapped_pe.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: Ext.memory_region.mapped_pe.imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: Ext.memory_region.mapped_pe.imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: Ext.memory_region.mapped_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: Ext.memory_region.mapped_pe.pehash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.

        Learn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.'
      example: 73ff189b63cd6be375a7ff25179a38d347651975
      default_field: false
    - name: Ext.memory_region.mapped_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the PE file.

        The keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.'
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: PE Section List name.
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: PE Section List physical size.
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections.var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the section.
      default_field: false
    - name: Ext.memory_region.mapped_pe.sections.virtual_size
      level: extended
      type: long
      format: string
      description: PE Section List virtual size. This is always the same as `physical_size`.
      default_field: false
    - name: Ext.memory_region.mapped_pe_detected
      level: custom
      type: boolean
      description: Whether the file at mapped_path is an executable.
      example: false
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.dotnet
      level: custom
      type: boolean
      description: Whether this file is a .NET PE
      example: 'true'
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections
      level: custom
      type: object
      object_type: keyword
      description: The file's relevant sections, if it is a PE
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.sections.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The section's name
      example: .reloc
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams
      level: custom
      type: object
      object_type: keyword
      description: The file's streams, if it is a PE
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.sha384
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA384 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.hash.tlsh
      level: extended
      type: keyword
      ignore_above: 1024
      description: TLSH hash.
      default_field: false
    - name: Ext.memory_region.memory_pe.Ext.streams.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The stream's name
      example: .reloc
      default_field: false
    - name: Ext.memory_region.memory_pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: Ext.memory_region.memory_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: Ext.memory_region.memory_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: Ext.memory_region.memory_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: Ext.memory_region.memory_pe.go_import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        The algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).'
      example: 10bddcb4cee42080f76c88d9ff964491
      default_field: false
    - name: Ext.memory_region.memory_pe.go_imports
      level: extended
      type: flattened
      description: List of imported Go language element names and types.
      default_field: false
    - name: Ext.memory_region.memory_pe.go_imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: Ext.memory_region.memory_pe.go_imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of Go imports.
      default_field: false
    - name: Ext.memory_region.memory_pe.go_stripped
      level: extended
      type: boolean
      description: Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.
      default_field: false
    - name: Ext.memory_region.memory_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: Ext.memory_region.memory_pe.import_hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        This is a synonym for imphash.'
      example: d41d8cd98f00b204e9800998ecf8427e
      default_field: false
    - name: Ext.memory_region.memory_pe.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: Ext.memory_region.memory_pe.imports_names_entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: Ext.memory_region.memory_pe.imports_names_var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the list of imported element names and types.
      default_field: false
    - name: Ext.memory_region.memory_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: Ext.memory_region.memory_pe.pehash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.

        Learn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.'
      example: 73ff189b63cd6be375a7ff25179a38d347651975
      default_field: false
    - name: Ext.memory_region.memory_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: Ext.memory_region.memory_pe.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the PE file.

        The keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.'
      default_field: false
    - name: Ext.memory_region.memory_pe.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: Ext.memory_region.memory_pe.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: PE Section List name.
      default_field: false
    - name: Ext.memory_region.memory_pe.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: PE Section List physical size.
      default_field: false
    - name: Ext.memory_region.memory_pe.sections.var_entropy
      level: extended
      type: long
      format: number
      description: Variance for Shannon entropy calculation from the section.
      default_field: false
    - name: Ext.memory_region.memory_pe.sections.virtual_size
      level: extended
      type: long
      format: string
      description: PE Section List virtual size. This is always the same as `physical_size`.
      default_field: false
    - name: Ext.memory_region.memory_pe_detected
      level: custom
      type: boolean
      description: Whether an executable file was found in memory.
      example: false
      default_field: false
    - name: Ext.memory_region.region_base
      level: custom
      type: unsigned_long
      description: Base address of the memory region.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.region_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection of the memory region. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: Ext.memory_region.region_size
      level: custom
      type: unsigned_long
      description: Size of the memory region.
      example: 4096
      default_field: false
    - name: Ext.memory_region.region_state
      level: custom
      type: keyword
      ignore_above: 1024
      description: State of the memory region. Example values include "RESERVE", "COMMIT", and "FREE".
      example: COMMIT
      default_field: false
    - name: Ext.memory_region.strings
      level: custom
      type: keyword
      description: Array of strings found within the memory region.
      index: false
      doc_values: false
      default_field: false
    - name: Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: command_line
      level: extended
      type: wildcard
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
          default_field: false
        - name: text
          type: text
          norms: false
          default_field: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
          default_field: false
        - name: text
          type: text
          norms: false
          default_field: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
    - name: pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
    - name: thread.Ext
      level: custom
      type: object
      object_type: keyword
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: thread.Ext.call_stack
      level: custom
      type: object
      object_type: keyword
      description: Fields describing a stack frame.  call_stack is expected to be an array where each array element represents a stack frame.
      enabled: false
      default_field: false
    - name: thread.Ext.call_stack.allocation_private_bytes
      level: custom
      type: unsigned_long
      description: The number of bytes in this memory allocation/image that are both +X and non-shareable. Non-zero values can indicate code hooking, patching, or hollowing.
      default_field: false
    - name: thread.Ext.call_stack.callsite_leading_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: Hex opcode bytes preceding the callsite
      default_field: false
    - name: thread.Ext.call_stack.callsite_trailing_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: Hex opcode bytes after the callsite (where control will return to)
      default_field: false
    - name: thread.Ext.call_stack.instruction_pointer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The return address of this stack frame.
      default_field: false
    - name: thread.Ext.call_stack.module_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: The path to the DLL/module containing `instruction_pointer`.
      default_field: false
    - name: thread.Ext.call_stack.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Protection of the page containing this instruction.  This is `R-X' by default if omitted.
      default_field: false
    - name: thread.Ext.call_stack.protection_provenance
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the memory region that last modified the protection of this page.  "Unbacked" can indicate shellcode.
      default_field: false
    - name: thread.Ext.call_stack.symbol_info
      level: custom
      type: keyword
      ignore_above: 1024
      description: The nearest symbol for `instruction_pointer`.
      default_field: false
    - name: thread.Ext.call_stack_contains_unbacked
      level: custom
      type: boolean
      description: Indicates whether the creating thread's stack contains frames pointing outside any known executable image.
      default_field: false
    - name: thread.Ext.call_stack_final_user_module
      level: custom
      type: nested
      description: The final non-win32 module in the call stack.
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature
      level: custom
      type: nested
      description: Code signature of the call_stack_final_user_module.
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.hash
      level: custom
      type: object
      object_type: keyword
      description: Hashes of the call_stack_final_user_module.
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: The sha256 of the call_stack_final_user_module.
      example: d25ff1e6c6460a7f9de39198d182058c1712726008d187e1953b83abe977e4a0
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The file name of the call_stack_final_user_module.
      example: example.dll
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: The file path of the call_stack_final_user_module.
      example: C:\Program Files\Example\example.dll
      default_field: false
    - name: thread.Ext.call_stack_final_user_module.protection_provenance
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the memory region that last modified the protection of this page. "Unbacked" may indicate shellcode.
      example: third_party_hook.dll
      default_field: false
    - name: thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
- name: user
  title: User
  group: 2
  description: 'The user fields describe information about the user that is relevant to the event.

    Fields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.'
  type: group
  default_field: true
  fields:
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique user hash to correlate information for a user in anonymized form.

        Useful if `user.id` or `user.name` contain confidential information and cannot be used.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: match_only_text
          default_field: false
      description: Short name or login of the user.
      example: a.einstein
