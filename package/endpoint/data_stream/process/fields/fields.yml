- name: '@timestamp'
  level: core
  required: true
  type: date
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the event was generated by the source.

    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
- name: message
  level: core
  type: text
  description: 'For log events the message field contains the log message, optimized for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
- name: agent
  title: Agent
  group: 2
  description: 'The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.

    Examples include Beats. Agents may also run on observers. ECS agent.* fields shall be populated with details of the agent running on the host or observer where the event happened or the measurement was taken.'
  footnote: 'Examples: In the case of Beats for logs, the agent.name is filebeat. For APM, it is the agent running in the app/service. The agent information does not change if data is sent through queuing systems like Kafka, Redis, or processing systems such as Logstash or APM Server.'
  type: group
  fields:
    - name: ephemeral_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Ephemeral identifier of this agent (if one exists).

        This id normally changes across restarts, but `agent.id` does not.'
      example: 8a4f500f
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier of this agent (if one exists).

        Example: For Beats this would be beat.id.'
      example: 8a4f500d
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Custom name of the agent.

        This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.

        If no name is given, the name is often left empty.'
      example: foo
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Type of the agent.

        The agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.'
      example: filebeat
    - name: version
      level: core
      type: keyword
      ignore_above: 1024
      description: Version of the agent.
      example: 6.0.0-rc2
- name: data_stream
  title: data_stream
  group: 2
  description: Fields describing the new indexing strategy <type>-<dataset>-<namespace>
  type: group
  fields:
    - name: dataset
      level: custom
      type: constant_keyword
      description: Data stream dataset name.
      example: nginx.access
      default_field: false
    - name: namespace
      level: custom
      type: constant_keyword
      description: Data stream namespace.
      example: production
      default_field: false
    - name: type
      level: custom
      type: constant_keyword
      description: Data stream type.
      example: logs
      default_field: false
- name: destination
  title: Destination
  group: 2
  description: 'Destination fields capture details about the receiver of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.

    Destination fields are usually populated in conjunction with source fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.'
  type: group
  fields:
    - name: geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
    - name: geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
    - name: geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
    - name: geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
    - name: geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
    - name: geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
    - name: geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
    - name: geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
    - name: geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
- name: ecs
  title: ECS
  group: 2
  description: Meta-information specific to ECS.
  type: group
  fields:
    - name: version
      level: core
      required: true
      type: keyword
      ignore_above: 1024
      description: 'ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.

        When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.'
      example: 1.0.0
- name: event
  title: Event
  group: 2
  description: 'The event fields are used for context information about the log or metric event itself.

    A log is defined as an event containing details of something that happened. Log events must include the time at which the thing happened. Examples of log events include a process starting on a host, a network packet being sent from a source to a destination, or a network connection between a client and a server being initiated or closed. A metric is defined as an event containing one or more numerical measurements and the time at which the measurement was taken. Examples of metric events include memory pressure measured on a host and device temperature. See the `event.kind` definition in this section for additional details about metric and state events.'
  type: group
  fields:
    - name: action
      level: core
      type: keyword
      ignore_above: 1024
      description: 'The action captured by the event.

        This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.'
      example: user-password-change
    - name: category
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.

        `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.

        This field is an array. This will allow proper categorization of some events that fall in multiple categories.'
      example: authentication
    - name: code
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Identification code for this event, if one exists.

        Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.'
      example: 4648
    - name: created
      level: core
      type: date
      description: 'event.created contains the date/time when the event was first read by an agent, or by your pipeline.

        This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.

        In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent''s or pipeline''s ability to keep up with your event source.

        In case the two timestamps are identical, @timestamp should be used.'
      example: '2016-05-23T08:05:34.857Z'
    - name: dataset
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the dataset.

        If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.

        It''s recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.'
      example: apache.access
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.
      example: 123456789012345678901234567890ABCD
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique ID to describe the event.
      example: 8a4f500d
    - name: ingested
      level: core
      type: date
      description: 'Timestamp when an event arrived in the central data store.

        This is different from `@timestamp`, which is when the event originally occurred.  It''s also different from `event.created`, which is meant to capture the first time an agent saw the event.

        In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.'
      example: '2016-05-23T08:05:35.101Z'
      default_field: false
    - name: kind
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.

        `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.

        The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.'
      example: alert
    - name: module
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the module this data is coming from.

        If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.'
      example: apache
    - name: outcome
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.

        `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.

        Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.

        Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.

        Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.'
      example: success
    - name: provider
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Source of the event.

        Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).'
      example: kernel
    - name: sequence
      level: extended
      type: long
      format: string
      description: 'Sequence number of the event.

        The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.'
    - name: severity
      level: core
      type: long
      format: string
      description: 'The numeric severity of the event according to your event source.

        What the different severity values mean can be different between sources and use cases. It''s up to the implementer to make sure severities are consistent across events from the same source.

        The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.'
      example: 7
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.

        `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.

        This field is an array. This will allow proper categorization of some events that fall in multiple event types.'
- name: group
  title: Group
  group: 2
  description: The group fields are meant to represent groups that are relevant to the event.
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.real
      level: custom
      type: object
      description: Group info prior to any setgid operations.
      default_field: false
    - name: Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
- name: host
  title: Host
  group: 2
  description: 'A host is defined as a general computing instance.

    ECS host.* fields should be populated with details about the host on which the event happened, or from which the measurement was taken. Host types include hardware, virtual machines, Docker containers, and Kubernetes nodes.'
  type: group
  fields:
    - name: architecture
      level: core
      type: keyword
      ignore_above: 1024
      description: Operating system architecture.
      example: x86_64
    - name: boot.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Linux boot uuid taken from /proc/sys/kernel/random/boot_id. Note the boot_id value from /proc may or may not be the same in containers as on the host. Some container runtimes will bind mount a new boot_id value onto the proc file in each container.
      default_field: false
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the domain of which the host is a member.

        For example, on Windows this could be the host''s Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host''s LDAP provider.'
      example: CONTOSO
      default_field: false
    - name: hostname
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Hostname of the host.

        It normally contains what the `hostname` command returns on the host machine.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Unique host id.

        As hostname is not always unique, use values that are meaningful in your environment.

        Example: The current usage of `beat.name`.'
    - name: ip
      level: core
      type: ip
      description: Host ip addresses.
    - name: mac
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Host MAC addresses.

        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.'
      example: '["00-00-5E-00-53-23", "00-00-5E-00-53-24"]'
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the host.

        It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.'
    - name: os.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: os.Ext.variant
      level: custom
      type: keyword
      ignore_above: 1024
      description: A string value or phrase that further aid to classify or qualify the operating system (OS).  For example the distribution for a Linux OS will be entered in this field.
      example: Ubuntu
      default_field: false
    - name: os.family
      level: extended
      type: keyword
      ignore_above: 1024
      description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
    - name: os.full
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, including the version or code name.
      example: Mac OS Mojave
    - name: os.kernel
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
    - name: os.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, without the version.
      example: Mac OS X
    - name: os.platform
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
    - name: os.version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system version as a raw string.
      example: 10.14.1
    - name: pid_ns_ino
      level: extended
      type: keyword
      ignore_above: 1024
      description: This is the inode number of the namespace in the namespace file system (nsfs). Unsigned int inum in include/linux/ns_common.h.
      default_field: false
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Type of host.

        For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.'
    - name: uptime
      level: extended
      type: long
      description: Seconds the host has been up.
      example: 1325
- name: package
  title: Package
  group: 2
  description: These fields contain information about an installed software package. It contains general information about a package, such as name, version or size. It also contains installation details, such as time or location.
  type: group
  fields:
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Package name
      example: go
- name: process
  title: Process
  group: 2
  description: 'These fields contain information about a process.

    These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.ancestry
      level: custom
      type: keyword
      ignore_above: 1024
      description: An array of entity_ids indicating the ancestors for this event
      default_field: false
    - name: Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: Ext.authentication_id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process authentication ID
      default_field: false
    - name: Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.defense_evasions
      level: custom
      type: keyword
      ignore_above: 1024
      description: List of defense evasions found in this process. These defense evasions can make it harder to inspect a process and/or cause abnormal OS behavior. Examples tools that can cause defense evasions include Process Doppelganging and Process Herpaderping.
      default_field: false
    - name: Ext.dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: Ext.dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: Ext.dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: Ext.dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: Ext.dll.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.dll.code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the binary.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: Ext.dll.code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.dll.code_signature.subject_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.dll.code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the binary.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: Ext.dll.code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.dll.code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: Ext.session
      level: custom
      type: keyword
      ignore_above: 1024
      description: Session information for the current process
      default_field: false
    - name: Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: Ext.token.elevation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: Ext.token.security_attributes
      level: custom
      type: keyword
      ignore_above: 1024
      description: Array of security attributes of the token, retrieved via the  TokenSecurityAttributes class.
      example: TSA://ProcUnique, LUA://DecHdAutoAp
      default_field: false
    - name: args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
    - name: args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: entry_leader.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: entry_leader.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: entry_leader.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: entry_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: entry_leader.entry_meta.source.ip
      level: core
      type: ip
      description: IP address of the source (IPv4 or IPv6).
      default_field: false
    - name: entry_leader.entry_meta.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The entry type for the entry session leader. Values include: init(e.g systemd), sshd, ssm, kubelet, teleport, terminal, console'
      default_field: false
    - name: entry_leader.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: entry_leader.group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: entry_leader.group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: entry_leader.interactive
      level: extended
      type: boolean
      description: 'Whether the process is connected to an interactive shell.

        Process interactivity is infered from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.

        Note: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.'
      default_field: false
    - name: entry_leader.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: entry_leader.parent.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: entry_leader.parent.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: entry_leader.parent.session_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: entry_leader.parent.session_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: entry_leader.parent.session_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: entry_leader.parent.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: entry_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: entry_leader.real_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: entry_leader.real_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: entry_leader.real_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: entry_leader.real_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: entry_leader.same_as_process
      level: extended
      type: boolean
      description: 'This boolean is used to identify if a leader process is the same as the top level process.

        For example, if process.group_leader.same_as_process = true, it means the process event in question is the leader of its process group. Details under process.* like pid would be the same under process.group_leader.*

        The same applies for both process.session_leader and process.entry_leader.

        This field exists to the benefit of EQL and other rule engines since it''s not possible to compare equality between two fields in a single document.

        e.g

        process.entity_id = process.group_leader.entity_id (top level process is the process group leader)

        OR

        process.entity_id = process.entry_leader.entity_id (top level process is the entry session leader)

        Instead these rules could be written like:

        process.group_leader.same_as_process: true

        OR

        process.entry_leader.same_as_process: true

        Note: This field is only set on process.entry_leader, process.session_leader and process.group_leader.'
      default_field: false
    - name: entry_leader.saved_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: entry_leader.saved_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: entry_leader.saved_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: entry_leader.saved_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: entry_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: entry_leader.supplemental_groups.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: entry_leader.supplemental_groups.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: entry_leader.tty
      level: extended
      type: object
      description: Information about the controlling TTY device. If set, the process belongs to an interactive session.
      default_field: false
    - name: entry_leader.tty.char_device.major
      level: extended
      type: long
      description: The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0. For more details see https://www.kernel.org/doc/html/v4.11/admin-guide/devices.html
      default_field: false
    - name: entry_leader.tty.char_device.minor
      level: extended
      type: long
      description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."
      default_field: false
    - name: entry_leader.user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: entry_leader.user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: entry_leader.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: env_vars
      level: extended
      type: object
      description: 'Environment variables set at the time of the event.

        May be filtered to protect sensitive information.'
      example: "{\n  \"USER\": \"elastic\",\n  \"LANG\": \"en_US.UTF-8\",\n  \"HOME\": \"/home/elastic\"\n}"
      default_field: false
    - name: executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
    - name: exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: group_leader.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: group_leader.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: group_leader.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: group_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: group_leader.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: group_leader.group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group_leader.group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group_leader.interactive
      level: extended
      type: boolean
      description: 'Whether the process is connected to an interactive shell.

        Process interactivity is infered from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.

        Note: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.'
      default_field: false
    - name: group_leader.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: group_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: group_leader.real_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group_leader.real_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group_leader.real_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: group_leader.real_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: group_leader.same_as_process
      level: extended
      type: boolean
      description: 'This boolean is used to identify if a leader process is the same as the top level process.

        For example, if process.group_leader.same_as_process = true, it means the process event in question is the leader of its process group. Details under process.* like pid would be the same under process.group_leader.*

        The same applies for both process.session_leader and process.entry_leader.

        This field exists to the benefit of EQL and other rule engines since it''s not possible to compare equality between two fields in a single document.

        e.g

        process.entity_id = process.group_leader.entity_id (top level process is the process group leader)

        OR

        process.entity_id = process.entry_leader.entity_id (top level process is the entry session leader)

        Instead these rules could be written like:

        process.group_leader.same_as_process: true

        OR

        process.entry_leader.same_as_process: true

        Note: This field is only set on process.entry_leader, process.session_leader and process.group_leader.'
      default_field: false
    - name: group_leader.saved_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group_leader.saved_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group_leader.saved_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: group_leader.saved_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: group_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: group_leader.supplemental_groups.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group_leader.supplemental_groups.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group_leader.tty
      level: extended
      type: object
      description: Information about the controlling TTY device. If set, the process belongs to an interactive session.
      default_field: false
    - name: group_leader.tty.char_device.major
      level: extended
      type: long
      description: The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0. For more details see https://www.kernel.org/doc/html/v4.11/admin-guide/devices.html
      default_field: false
    - name: group_leader.tty.char_device.minor
      level: extended
      type: long
      description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."
      default_field: false
    - name: group_leader.user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: group_leader.user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: group_leader.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
    - name: hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
    - name: hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
    - name: hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
    - name: interactive
      level: extended
      type: boolean
      description: 'Whether the process is connected to an interactive shell.

        Process interactivity is infered from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.

        Note: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.'
      default_field: false
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
    - name: parent.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: parent.Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: parent.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: parent.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: parent.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: parent.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: parent.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: parent.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: parent.Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: parent.Ext.real
      level: custom
      type: object
      description: The field set containing process info in case of any pid spoofing. This is mainly useful for process.parent.
      default_field: false
    - name: parent.Ext.real.pid
      level: custom
      type: long
      description: For process.parent this will be the ppid of the process that actually spawned the current process.
      default_field: false
    - name: parent.Ext.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: User associated with the running process.
      default_field: false
    - name: parent.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: parent.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: parent.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: parent.code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: parent.code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: parent.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: parent.code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: parent.code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: parent.code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: parent.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: parent.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: parent.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: parent.exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: parent.group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: parent.group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: parent.group_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: parent.group_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: parent.group_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: parent.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: parent.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: parent.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: parent.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: parent.interactive
      level: extended
      type: boolean
      description: 'Whether the process is connected to an interactive shell.

        Process interactivity is infered from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.

        Note: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.'
      default_field: false
    - name: parent.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: parent.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: parent.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: parent.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: parent.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: parent.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: parent.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: parent.pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
      default_field: false
    - name: parent.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: parent.ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
      default_field: false
    - name: parent.real_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: parent.real_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: parent.real_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: parent.real_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: parent.saved_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: parent.saved_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: parent.saved_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: parent.saved_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: parent.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: parent.supplemental_groups.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: parent.supplemental_groups.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: parent.thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
      default_field: false
    - name: parent.thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
      default_field: false
    - name: parent.title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
      default_field: false
    - name: parent.tty
      level: extended
      type: object
      description: Information about the controlling TTY device. If set, the process belongs to an interactive session.
      default_field: false
    - name: parent.tty.char_device.major
      level: extended
      type: long
      description: The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0. For more details see https://www.kernel.org/doc/html/v4.11/admin-guide/devices.html
      default_field: false
    - name: parent.tty.char_device.minor
      level: extended
      type: long
      description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."
      default_field: false
    - name: parent.uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
      default_field: false
    - name: parent.user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: parent.user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: parent.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
    - name: pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
    - name: ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
    - name: previous.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: previous.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: previous.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: real_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: real_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: real_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: real_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: saved_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: saved_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: saved_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: saved_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: session_leader.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: session_leader.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: session_leader.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: session_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: session_leader.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: session_leader.group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: session_leader.group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: session_leader.interactive
      level: extended
      type: boolean
      description: 'Whether the process is connected to an interactive shell.

        Process interactivity is infered from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.

        Note: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.'
      default_field: false
    - name: session_leader.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: session_leader.parent.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: session_leader.parent.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: session_leader.parent.session_leader.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: session_leader.parent.session_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: session_leader.parent.session_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: session_leader.parent.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: session_leader.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: session_leader.real_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: session_leader.real_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: session_leader.real_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: session_leader.real_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: session_leader.same_as_process
      level: extended
      type: boolean
      description: 'This boolean is used to identify if a leader process is the same as the top level process.

        For example, if process.group_leader.same_as_process = true, it means the process event in question is the leader of its process group. Details under process.* like pid would be the same under process.group_leader.*

        The same applies for both process.session_leader and process.entry_leader.

        This field exists to the benefit of EQL and other rule engines since it''s not possible to compare equality between two fields in a single document.

        e.g

        process.entity_id = process.group_leader.entity_id (top level process is the process group leader)

        OR

        process.entity_id = process.entry_leader.entity_id (top level process is the entry session leader)

        Instead these rules could be written like:

        process.group_leader.same_as_process: true

        OR

        process.entry_leader.same_as_process: true

        Note: This field is only set on process.entry_leader, process.session_leader and process.group_leader.'
      default_field: false
    - name: session_leader.saved_group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: session_leader.saved_group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: session_leader.saved_user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: session_leader.saved_user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: session_leader.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: session_leader.supplemental_groups.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: session_leader.supplemental_groups.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: session_leader.tty
      level: extended
      type: object
      description: Information about the controlling TTY device. If set, the process belongs to an interactive session.
      default_field: false
    - name: session_leader.tty.char_device.major
      level: extended
      type: long
      description: The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0. For more details see https://www.kernel.org/doc/html/v4.11/admin-guide/devices.html
      default_field: false
    - name: session_leader.tty.char_device.minor
      level: extended
      type: long
      description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."
      default_field: false
    - name: session_leader.user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: session_leader.user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: session_leader.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
    - name: supplemental_groups.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: supplemental_groups.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
    - name: thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
    - name: title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
    - name: tty
      level: extended
      type: object
      description: Information about the controlling TTY device. If set, the process belongs to an interactive session.
      default_field: false
    - name: tty.char_device.major
      level: extended
      type: long
      description: The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0. For more details see https://www.kernel.org/doc/html/v4.11/admin-guide/devices.html
      default_field: false
    - name: tty.char_device.minor
      level: extended
      type: long
      description: "The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them."
      default_field: false
    - name: uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
    - name: user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
      default_field: false
    - name: user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Short name or login of the user.
      example: albert
      default_field: false
    - name: working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: The working directory of the process.
      example: /home/alice
- name: source
  title: Source
  group: 2
  description: Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction. Source fields are usually populated in conjunction with destination fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.
  type: group
  fields:
    - name: geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
    - name: geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
    - name: geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
    - name: geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
    - name: geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
    - name: geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
    - name: geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
    - name: geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
    - name: geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
- name: user
  title: User
  group: 2
  description: 'The user fields describe information about the user that is relevant to the event.

    Fields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.real
      level: custom
      type: object
      description: User info prior to any setuid operations.
      default_field: false
    - name: Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: One or multiple unique identifiers of the user.
      default_field: false
    - name: Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Short name or login of the user.
      default_field: false
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: email
      level: extended
      type: keyword
      ignore_above: 1024
      description: User email address.
    - name: full_name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: User's full name, if available.
      example: Albert Einstein
    - name: group.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: group.Ext.real
      level: custom
      type: object
      description: Group info prior to any setgid operations.
      default_field: false
    - name: group.Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group.Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
    - name: group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique user hash to correlate information for a user in anonymized form.

        Useful if `user.id` or `user.name` contain confidential information and cannot be used.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: Short name or login of the user.
      example: albert
