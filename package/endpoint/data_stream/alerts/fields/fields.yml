- name: '@timestamp'
  level: core
  required: true
  type: date
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the event was generated by the source.

    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
- name: Events
  level: custom
  type: keyword
  ignore_above: 1024
  description: events array
  default_field: false
- name: message
  level: core
  type: text
  description: 'For log events the message field contains the log message, optimized for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
- name: Endpoint
  title: Endpoint
  group: 2
  description: Fields describing the state of the Elastic Endpoint when an event occurs.
  type: group
  fields:
    - name: policy
      level: custom
      type: object
      description: The policy fields are used to hold information about applied policy.
      default_field: false
    - name: policy.applied
      level: custom
      type: object
      description: information about the policy that is applied
      default_field: false
    - name: policy.applied.artifacts
      level: custom
      type: object
      description: information about protection artifacts applied.
      enabled: false
      default_field: false
    - name: policy.applied.artifacts.global
      level: custom
      type: object
      description: information about global protection artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.global.identifiers
      level: custom
      type: nested
      description: the identifiers of global artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.global.identifiers.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: the name of global artifact applied.
      default_field: false
    - name: policy.applied.artifacts.global.identifiers.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: the sha256 of global artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.global.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: the version of global artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.user
      level: custom
      type: object
      description: information about user protection artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.user.identifiers
      level: custom
      type: nested
      description: the identifiers of user artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.user.identifiers.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: the name of user artifact applied.
      default_field: false
    - name: policy.applied.artifacts.user.identifiers.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: the sha256 of user artifacts applied.
      default_field: false
    - name: policy.applied.artifacts.user.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: the version of user artifacts applied.
      default_field: false
    - name: policy.applied.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: the id of the applied policy
      default_field: false
    - name: policy.applied.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: the name of this applied policy
      default_field: false
    - name: policy.applied.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: the status of the applied policy
      default_field: false
    - name: policy.applied.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: the version of this applied policy
      default_field: false
- name: Memory_protection
  title: Memory Protection
  group: 2
  description: These fields contain information specific to Memory Protection alerts.
  type: group
  fields:
    - name: cross_session
      level: custom
      type: boolean
      description: Is this process injecting across operating system sessions?
      default_field: false
    - name: feature
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory Protection feature which triggered the alert.
      example: shellcode_thread
      default_field: false
    - name: parent_to_child
      level: custom
      type: boolean
      description: Is this process injecting into its child?
      default_field: false
    - name: self_injection
      level: custom
      type: boolean
      description: Is this alert about a process injecting into itself?
      default_field: false
    - name: thread_count
      level: custom
      type: long
      description: The number of threads that this alert applies to. If several alerts occur in a short period of time, they can be combined into a single alert with thread_count > 1.
      default_field: false
    - name: unique_key_v1
      level: custom
      type: keyword
      ignore_above: 1024
      description: A unique key created by hashing several characteristics of this alert.
      default_field: false
- name: Ransomware
  title: Ransomware
  group: 2
  description: These fields contain information specific to ransomware alerts.
  type: group
  fields:
    - name: child_processes.executable
      level: custom
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: child_processes.feature
      level: custom
      type: keyword
      ignore_above: 1024
      description: Ransomware feature which triggered the alert.
      default_field: false
    - name: child_processes.files
      level: custom
      type: nested
      description: Information about each file event attributed to the ransomware. Expected to be an array.
      default_field: false
    - name: child_processes.files.data
      level: custom
      type: binary
      description: File header or MBR bytes.
      default_field: false
    - name: child_processes.files.entropy
      level: custom
      type: double
      description: Entropy of file contents.
      default_field: false
    - name: child_processes.files.extension
      level: custom
      type: keyword
      ignore_above: 1024
      description: File extension, excluding the leading dot.
      default_field: false
    - name: child_processes.files.metrics
      level: custom
      type: keyword
      ignore_above: 1024
      description: Suspicious ransomware behaviours associated with the file event.
      default_field: false
    - name: child_processes.files.operation
      level: custom
      type: keyword
      ignore_above: 1024
      description: Operation applied to file.
      default_field: false
    - name: child_processes.files.original.extension
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file extension prior to the file event.
      default_field: false
    - name: child_processes.files.original.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file path prior to the file event.
      default_field: false
    - name: child_processes.files.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Full path to the file, including the file name.
      default_field: false
    - name: child_processes.files.score
      level: custom
      type: double
      description: Ransomware score for this particular file event.
      default_field: false
    - name: child_processes.pid
      level: custom
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: child_processes.score
      level: custom
      type: double
      description: Total ransomware score for aggregated file events.
      default_field: false
    - name: child_processes.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: Ransomware artifact version.
      default_field: false
    - name: executable
      level: custom
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: feature
      level: custom
      type: keyword
      ignore_above: 1024
      description: Ransomware feature which triggered the alert.
      default_field: false
    - name: files
      level: custom
      type: nested
      description: Information about each file event attributed to the ransomware. Expected to be an array.
      default_field: false
    - name: files.data
      level: custom
      type: binary
      description: File header or MBR bytes.
      default_field: false
    - name: files.entropy
      level: custom
      type: double
      description: Entropy of file contents.
      default_field: false
    - name: files.extension
      level: custom
      type: keyword
      ignore_above: 1024
      description: File extension, excluding the leading dot.
      default_field: false
    - name: files.metrics
      level: custom
      type: keyword
      ignore_above: 1024
      description: Suspicious ransomware behaviours associated with the file event.
      default_field: false
    - name: files.operation
      level: custom
      type: keyword
      ignore_above: 1024
      description: Operation applied to file.
      default_field: false
    - name: files.original.extension
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file extension prior to the file event.
      default_field: false
    - name: files.original.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file path prior to the file event.
      default_field: false
    - name: files.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Full path to the file, including the file name.
      default_field: false
    - name: files.score
      level: custom
      type: double
      description: Ransomware score for this particular file event.
      default_field: false
    - name: pid
      level: custom
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: score
      level: custom
      type: double
      description: Total ransomware score for aggregated file events.
      default_field: false
    - name: version
      level: custom
      type: keyword
      ignore_above: 1024
      description: Ransomware artifact version.
      default_field: false
- name: Responses
  title: Responses
  group: 2
  description: responses array contains rule response action results
  type: group
  fields:
    - name: '@timestamp'
      level: custom
      type: date
      format: string
      description: timestamp in which action was taken
      default_field: false
    - name: action
      level: custom
      type: nested
      description: dictionary representing requested response action
      default_field: false
    - name: action.action
      level: custom
      type: keyword
      ignore_above: 1024
      description: response action name
      default_field: false
    - name: action.field
      level: custom
      type: text
      description: field in the triggering event to use as input for action
      default_field: false
    - name: action.state
      level: custom
      type: long
      description: index of event in events array to use for field lookup
      default_field: false
    - name: message
      level: custom
      type: text
      description: result message
      default_field: false
    - name: process
      level: custom
      type: nested
      description: dictionary representing process information
      default_field: false
    - name: process.entity_id
      level: custom
      type: text
      description: entity id of actionable process
      default_field: false
    - name: process.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: name of actionable process
      default_field: false
    - name: process.pid
      level: custom
      type: long
      description: pid of actionable process
      default_field: false
    - name: result
      level: custom
      type: long
      description: response action result code
      default_field: false
- name: Target
  title: Target
  group: 2
  description: 'These fields contain information about a target.

    These fields provide more context about the target process and thread that are related to the data in the document. Useful in a security context where a target process or thread may be acted on by another process or thread.'
  type: group
  fields:
    - name: dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: dll.Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: dll.Ext.malware_classification.features
      level: custom
      type: object
      description: Intermediate field included by adding option with subset
      enabled: false
      default_field: false
    - name: dll.Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: dll.Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: dll.Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: dll.Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: dll.Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: dll.Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: dll.Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: dll.Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: dll.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: dll.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: dll.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: dll.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: dll.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: dll.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: dll.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: dll.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: dll.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: dll.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.Ext.ancestry
      level: custom
      type: keyword
      ignore_above: 1024
      description: An array of entity_ids indicating the ancestors for this event
      default_field: false
    - name: process.Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: process.Ext.authentication_id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process authentication ID
      default_field: false
    - name: process.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: process.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: process.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: process.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: process.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: process.Ext.dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.Ext.dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: process.Ext.dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: process.Ext.dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: process.Ext.dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: process.Ext.dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: process.Ext.dll.Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: process.Ext.dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: process.Ext.dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: process.Ext.dll.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.Ext.dll.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.Ext.dll.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.Ext.dll.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.Ext.dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: process.Ext.dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: process.Ext.dll.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.dll.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.Ext.dll.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.Ext.dll.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.Ext.dll.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.Ext.dll.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext.malware_classification.features
      level: custom
      type: object
      description: Intermediate field included by adding option with subset
      enabled: false
      default_field: false
    - name: process.Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: process.Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: process.Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: process.Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: process.Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: process.Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: process.Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: process.Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: process.Ext.memory_region.allocation_base
      level: custom
      type: unsigned_long
      description: Base address of the memory allocation containing the memory region.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.allocation_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original memory protection requested when the memory was allocated. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: process.Ext.memory_region.allocation_size
      level: custom
      type: unsigned_long
      description: Original memory size requested when the memory was allocated.
      example: 4096
      default_field: false
    - name: process.Ext.memory_region.allocation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The memory allocation type. Example values include "IMAGE", "MAPPED", and "PRIVATE".
      example: PRIVATE
      default_field: false
    - name: process.Ext.memory_region.bytes_address
      level: custom
      type: unsigned_long
      description: The address where bytes_compressed begins.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.bytes_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of bytes_address the memory allocation. Equal to bytes_address - allocation_base.
      example: 0
      default_field: false
    - name: process.Ext.memory_region.bytes_compressed
      level: custom
      type: keyword
      description: Up to 4MB of raw data from the memory allocation. This is compressed with zlib.To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      example: eJzzSM3JyVcIzy/KSVEEABxJBD4=
      index: false
      doc_values: false
      default_field: false
    - name: process.Ext.memory_region.bytes_compressed_present
      level: custom
      type: boolean
      description: Whether bytes_compressed is present in this event.
      example: false
      default_field: false
    - name: process.Ext.memory_region.malware_signature.all_names
      level: custom
      type: keyword
      ignore_above: 1024
      description: A sequence of signature names matched.
      example: Windows.EICAR.Not-a-virus
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary
      level: custom
      type: object
      description: The first matching details.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: The id of the first yara rule matched.
      default_field: false
    - name: process.Ext.memory_region.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the first yara rule matched.
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.Ext.memory_region.mapped_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext.memory_region.mapped_pe_detected
      level: custom
      type: boolean
      description: Whether the file at mapped_path is an executable.
      example: false
      default_field: false
    - name: process.Ext.memory_region.memory_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.Ext.memory_region.memory_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.Ext.memory_region.memory_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.Ext.memory_region.memory_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.Ext.memory_region.memory_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.Ext.memory_region.memory_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.Ext.memory_region.memory_pe_detected
      level: custom
      type: boolean
      description: Whether an executable file was found in memory.
      example: false
      default_field: false
    - name: process.Ext.memory_region.region_base
      level: custom
      type: unsigned_long
      description: Base address of the memory region.
      example: 2431737462784
      default_field: false
    - name: process.Ext.memory_region.region_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection of the memory region. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: process.Ext.memory_region.region_size
      level: custom
      type: unsigned_long
      description: Size of the memory region.
      example: 4096
      default_field: false
    - name: process.Ext.memory_region.region_state
      level: custom
      type: keyword
      ignore_above: 1024
      description: State of the memory region. Example values include "RESERVE", "COMMIT", and "FREE".
      example: COMMIT
      default_field: false
    - name: process.Ext.memory_region.strings
      level: custom
      type: keyword
      description: Array of strings found within the memory region.
      index: false
      doc_values: false
      default_field: false
    - name: process.Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: process.Ext.services
      level: custom
      type: keyword
      ignore_above: 1024
      description: Services running in this process.
      default_field: false
    - name: process.Ext.session
      level: custom
      type: keyword
      ignore_above: 1024
      description: Session information for the current process
      default_field: false
    - name: process.Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: process.Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: process.Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: process.Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: process.Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: process.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: process.Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: process.Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: process.Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: process.Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: process.Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: process.Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: process.Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: process.Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: process.Ext.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: User associated with the running process.
      default_field: false
    - name: process.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: process.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: process.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: process.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: process.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: process.exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: process.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: process.parent.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.parent.Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: process.parent.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: process.parent.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: process.parent.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: process.parent.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: process.parent.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: process.parent.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: process.parent.Ext.dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: process.parent.Ext.dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: process.parent.Ext.dll.Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: process.parent.Ext.dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: process.parent.Ext.dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: process.parent.Ext.dll.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.parent.Ext.dll.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.parent.Ext.dll.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.parent.Ext.dll.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.parent.Ext.dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: process.parent.Ext.dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: process.parent.Ext.dll.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.parent.Ext.dll.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.parent.Ext.dll.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.parent.Ext.dll.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.parent.Ext.dll.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.parent.Ext.dll.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.parent.Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: process.parent.Ext.real
      level: custom
      type: object
      description: The field set containing process info in case of any pid spoofing. This is mainly useful for process.parent.
      default_field: false
    - name: process.parent.Ext.real.pid
      level: custom
      type: long
      description: For process.parent this will be the ppid of the process that actually spawned the current process.
      default_field: false
    - name: process.parent.Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: process.parent.Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: process.parent.Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: process.parent.Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: process.parent.Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: process.parent.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: process.parent.Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: process.parent.Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: process.parent.Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: process.parent.Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: process.parent.Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: process.parent.Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: process.parent.Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: process.parent.Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: process.parent.Ext.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: User associated with the running process.
      default_field: false
    - name: process.parent.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: process.parent.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: process.parent.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: process.parent.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: process.parent.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: process.parent.exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: process.parent.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: process.parent.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: process.parent.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: process.parent.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: process.parent.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: process.parent.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.parent.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.parent.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.parent.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.parent.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.parent.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.parent.pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
      default_field: false
    - name: process.parent.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: process.parent.ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
      default_field: false
    - name: process.parent.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: process.parent.thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
      default_field: false
    - name: process.parent.thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
      default_field: false
    - name: process.parent.title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
      default_field: false
    - name: process.parent.uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
      default_field: false
    - name: process.parent.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: process.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: process.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: process.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: process.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: process.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: process.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: process.pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
      default_field: false
    - name: process.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: process.ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
      default_field: false
    - name: process.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: process.thread.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: process.thread.Ext.call_stack
      level: custom
      type: group
      description: Fields describing a stack frame.  call_stack is expected to be an array where each array element represents a stack frame.
      enabled: false
      default_field: false
    - name: process.thread.Ext.call_stack.instruction_pointer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The return address of this stack frame.
      default_field: false
    - name: process.thread.Ext.call_stack.memory_section.address
      level: custom
      type: keyword
      ignore_above: 1024
      description: Base address of the memory region containing `instruction_pointer`.  Corresponds to `MEMORY_BASIC_INFORMATION.BaseAddress`
      default_field: false
    - name: process.thread.Ext.call_stack.memory_section.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection flags of this memory region.  Corresponds to `MEMORY_BASIC_INFORMATION.Protect`
      default_field: false
    - name: process.thread.Ext.call_stack.memory_section.size
      level: custom
      type: keyword
      ignore_above: 1024
      description: Size of the memory region containing `instruction_pointer`.  Corresponds to `MEMORY_BASIC_INFORMATION.RegionSize`
      default_field: false
    - name: process.thread.Ext.call_stack.module_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: The DLL/module containing `instruction_pointer`.
      default_field: false
    - name: process.thread.Ext.call_stack.rva
      level: custom
      type: keyword
      ignore_above: 1024
      description: The relative virtual address of `instruction_pointer`.  Computed as `instruction_pointer - MEMORY_BASIC_INFORMATION.AllocationBase`.
      default_field: false
    - name: process.thread.Ext.call_stack.symbol_info
      level: custom
      type: keyword
      ignore_above: 1024
      description: The nearest symbol for `instruction_pointer`.
      default_field: false
    - name: process.thread.Ext.parameter
      level: custom
      type: unsigned_long
      description: When a thread is created, this is the raw numerical value of its parameter.
      default_field: false
    - name: process.thread.Ext.parameter_bytes_compressed
      level: custom
      type: keyword
      description: Up to 512KB of raw data from the thread parameter, if it is a valid pointer. This is compressed with zlib. To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      index: false
      doc_values: false
      default_field: false
    - name: process.thread.Ext.parameter_bytes_compressed_present
      level: custom
      type: boolean
      description: Whether parameter_bytes_compressed is present in this event.
      default_field: false
    - name: process.thread.Ext.service
      level: custom
      type: keyword
      ignore_above: 1024
      description: Service associated with the thread.
      example: VaultSvc
      default_field: false
    - name: process.thread.Ext.start
      level: custom
      type: date
      description: The time the thread started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: process.thread.Ext.start_address
      level: custom
      type: unsigned_long
      description: Memory address where the thread began execution.
      example: 4194304
      default_field: false
    - name: process.thread.Ext.start_address_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of start_address into the memory allocation. Equal to start_address - start_address_details.allocation_base.
      example: 0
      default_field: false
    - name: process.thread.Ext.start_address_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: A few (typically 32) raw opcode bytes at the thread start address, hex-encoded.
      example: c3cc0000cccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      default_field: false
    - name: process.thread.Ext.start_address_bytes_disasm
      level: custom
      type: keyword
      ignore_above: 1024
      description: The bytes at the thread start address, disassembled into human-readable assembly code.
      example: ret\nint3
      default_field: false
    - name: process.thread.Ext.start_address_bytes_disasm_hash
      level: custom
      type: keyword
      ignore_above: 1024
      description: The bytes at the thread start address, with immediate values capped to 0x100, disassembled into human-readable assembly code, then hashed.
      example: aacb1c801f9030f799e2f7350f053ebb760d42cbe81cd65021063c1c4d1a9c9c
      default_field: false
    - name: process.thread.Ext.start_address_module
      level: custom
      type: keyword
      ignore_above: 1024
      description: The dll/module where the thread began execution.
      example: C:\Program Files\VMware\VMware Tools\vmtoolsd.exe
      default_field: false
    - name: process.thread.Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: process.thread.Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: process.thread.Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: process.thread.Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: process.thread.Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: process.thread.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: process.thread.Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: process.thread.Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: process.thread.Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: process.thread.Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: process.thread.Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: process.thread.Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: process.thread.Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: process.thread.Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: process.thread.Ext.uptime
      level: custom
      type: long
      description: Seconds since thread started.
      default_field: false
    - name: process.thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
      default_field: false
    - name: process.thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
      default_field: false
    - name: process.title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
      default_field: false
    - name: process.uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
      default_field: false
    - name: process.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
- name: agent
  title: Agent
  group: 2
  description: 'The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.

    Examples include Beats. Agents may also run on observers. ECS agent.* fields shall be populated with details of the agent running on the host or observer where the event happened or the measurement was taken.'
  footnote: 'Examples: In the case of Beats for logs, the agent.name is filebeat. For APM, it is the agent running in the app/service. The agent information does not change if data is sent through queuing systems like Kafka, Redis, or processing systems such as Logstash or APM Server.'
  type: group
  fields:
    - name: ephemeral_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Ephemeral identifier of this agent (if one exists).

        This id normally changes across restarts, but `agent.id` does not.'
      example: 8a4f500f
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier of this agent (if one exists).

        Example: For Beats this would be beat.id.'
      example: 8a4f500d
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Custom name of the agent.

        This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.

        If no name is given, the name is often left empty.'
      example: foo
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Type of the agent.

        The agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.'
      example: filebeat
    - name: version
      level: core
      type: keyword
      ignore_above: 1024
      description: Version of the agent.
      example: 6.0.0-rc2
- name: data_stream
  title: data_stream
  group: 2
  description: Fields describing the new indexing strategy <type>-<dataset>-<namespace>
  type: group
  fields:
    - name: dataset
      level: custom
      type: constant_keyword
      description: Data stream dataset name.
      example: nginx.access
      default_field: false
    - name: namespace
      level: custom
      type: constant_keyword
      description: Data stream namespace.
      example: production
      default_field: false
    - name: type
      level: custom
      type: constant_keyword
      description: Data stream type.
      example: logs
      default_field: false
- name: destination
  title: Destination
  group: 2
  description: 'Destination fields capture details about the receiver of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.

    Destination fields are usually populated in conjunction with source fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.'
  type: group
  fields:
    - name: geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
    - name: geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
    - name: geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
    - name: geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
    - name: geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
    - name: geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
    - name: geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
    - name: geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
    - name: geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
    - name: ip
      level: core
      type: ip
      description: IP address of the destination (IPv4 or IPv6).
- name: dll
  title: DLL
  group: 2
  description: 'These fields contain information about code libraries dynamically loaded into processes.


    Many operating systems refer to "shared code libraries" with different names, but this field set refers to all of the following:

    * Dynamic-link library (`.dll`) commonly used on Windows

    * Shared Object (`.so`) commonly used on Unix-like operating systems

    * Dynamic library (`.dylib`) commonly used on macOS'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: Ext.malware_classification.features
      level: custom
      type: object
      description: Intermediate field included by adding option with subset
      enabled: false
      default_field: false
    - name: Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
- name: dns
  title: DNS
  group: 2
  description: 'Fields describing DNS queries and answers.

    DNS events should either represent a single DNS query prior to getting answers (`dns.type:query`) or they should represent a full exchange and contain the query details as well as all of the answers that were provided for this query (`dns.type:answer`).'
  type: group
  fields:
    - name: question.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The name being queried.

        If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.'
      example: www.example.com
    - name: question.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: The type of record being queried.
      example: AAAA
- name: ecs
  title: ECS
  group: 2
  description: Meta-information specific to ECS.
  type: group
  fields:
    - name: version
      level: core
      required: true
      type: keyword
      ignore_above: 1024
      description: 'ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.

        When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.'
      example: 1.0.0
- name: elastic
  title: Elastic
  group: 2
  description: Holds fields and properties of data points and concepts in the elastic domain or namespace.
  type: group
  fields:
    - name: agent
      level: custom
      type: object
      description: The agent fields contain data about the Elastic Agent. The Elastic Agent is the management agent that manages other agents or process on the host.
      default_field: false
    - name: agent.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier of this elastic agent (if one exists).
      example: c2a9093e-e289-4c0a-aa44-8c32a414fa7a
      default_field: false
- name: event
  title: Event
  group: 2
  description: 'The event fields are used for context information about the log or metric event itself.

    A log is defined as an event containing details of something that happened. Log events must include the time at which the thing happened. Examples of log events include a process starting on a host, a network packet being sent from a source to a destination, or a network connection between a client and a server being initiated or closed. A metric is defined as an event containing one or more numerical measurements and the time at which the measurement was taken. Examples of metric events include memory pressure measured on a host and device temperature. See the `event.kind` definition in this section for additional details about metric and state events.'
  type: group
  fields:
    - name: action
      level: core
      type: keyword
      ignore_above: 1024
      description: 'The action captured by the event.

        This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.'
      example: user-password-change
    - name: category
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.

        `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.

        This field is an array. This will allow proper categorization of some events that fall in multiple categories.'
      example: authentication
    - name: code
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Identification code for this event, if one exists.

        Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.'
      example: 4648
    - name: created
      level: core
      type: date
      description: 'event.created contains the date/time when the event was first read by an agent, or by your pipeline.

        This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.

        In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent''s or pipeline''s ability to keep up with your event source.

        In case the two timestamps are identical, @timestamp should be used.'
      example: '2016-05-23T08:05:34.857Z'
    - name: dataset
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the dataset.

        If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.

        It''s recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.'
      example: apache.access
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.
      example: 123456789012345678901234567890ABCD
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique ID to describe the event.
      example: 8a4f500d
    - name: ingested
      level: core
      type: date
      description: 'Timestamp when an event arrived in the central data store.

        This is different from `@timestamp`, which is when the event originally occurred.  It''s also different from `event.created`, which is meant to capture the first time an agent saw the event.

        In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.'
      example: '2016-05-23T08:05:35.101Z'
      default_field: false
    - name: kind
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.

        `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.

        The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.'
      example: alert
    - name: module
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the module this data is coming from.

        If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.'
      example: apache
    - name: outcome
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.

        `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.

        Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.

        Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.

        Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.'
      example: success
    - name: provider
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Source of the event.

        Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).'
      example: kernel
    - name: risk_score
      level: core
      type: float
      description: Risk score or priority of the event (e.g. security solutions). Use your system's original value here.
    - name: sequence
      level: extended
      type: long
      format: string
      description: 'Sequence number of the event.

        The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.'
    - name: severity
      level: core
      type: long
      format: string
      description: 'The numeric severity of the event according to your event source.

        What the different severity values mean can be different between sources and use cases. It''s up to the implementer to make sure severities are consistent across events from the same source.

        The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.'
      example: 7
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.

        `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.

        This field is an array. This will allow proper categorization of some events that fall in multiple event types.'
- name: file
  title: File
  group: 2
  description: 'A file is defined as a set of information that has been created on, or has existed on a filesystem.

    File objects can be associated with host events, network events, and/or file events (e.g., those produced by File Integrity Monitoring [FIM] products or services). File fields provide details about the affected file associated with the event or metric.'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.entry_modified
      level: custom
      type: double
      description: Time of last status change.  See `st_ctim` member of `struct stat`.
      default_field: false
    - name: Ext.macro.code_page
      level: custom
      type: long
      description: Identifies the character encoding used for this macro.  https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers
      default_field: false
    - name: Ext.macro.collection
      level: custom
      type: object
      description: Object containing hashes for the macro collection.
      default_field: false
    - name: Ext.macro.collection.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.macro.collection.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.macro.collection.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.macro.collection.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.macro.errors
      level: custom
      type: nested
      description: Errors that occurred when parsing this document file.
      default_field: false
    - name: Ext.macro.errors.count
      level: custom
      type: long
      description: Number of times this error that occurred.
      default_field: false
    - name: Ext.macro.errors.error_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The type of parsing error that occurred.
      default_field: false
    - name: Ext.macro.file_extension
      level: custom
      type: keyword
      ignore_above: 1024
      description: The extension of the file containing this macro (e.g. .docm)
      default_field: false
    - name: Ext.macro.project_file
      level: custom
      type: object
      description: Metadata about the corresponding VBA project file
      default_field: false
    - name: Ext.macro.project_file.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.macro.project_file.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.macro.project_file.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.macro.project_file.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.macro.stream
      level: custom
      type: nested
      description: Streams associated with the document.
      default_field: false
    - name: Ext.macro.stream.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.macro.stream.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.macro.stream.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.macro.stream.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.macro.stream.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the stream.
      default_field: false
    - name: Ext.macro.stream.raw_code
      level: custom
      type: keyword
      ignore_above: 1024
      description: First 100KB of raw stream binary.  Can be useful to analyze false positives and malicious payloads.
      default_field: false
    - name: Ext.macro.stream.raw_code_size
      level: custom
      type: keyword
      ignore_above: 1024
      description: The original stream size.  Indicates whether stream.raw_code was truncated.
      default_field: false
    - name: Ext.malware_classification.features
      level: custom
      type: object
      description: Intermediate field included by adding option with subset
      enabled: false
      default_field: false
    - name: Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: Ext.original
      level: custom
      type: object
      description: Original file information during a modification event.
      default_field: false
    - name: Ext.original.gid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
      default_field: false
    - name: Ext.original.group
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
      default_field: false
    - name: Ext.original.mode
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file mode prior to a modification event
      default_field: false
    - name: Ext.original.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file name prior to a modification event
      default_field: false
    - name: Ext.original.owner
      level: custom
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
      default_field: false
    - name: Ext.original.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file path prior to a modification event
      default_field: false
    - name: Ext.original.uid
      level: custom
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      default_field: false
    - name: Ext.quarantine_message
      level: custom
      type: keyword
      ignore_above: 1024
      description: Message describing quarantine results.
      default_field: false
    - name: Ext.quarantine_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint the quarantined file was originally.
      default_field: false
    - name: Ext.quarantine_result
      level: custom
      type: boolean
      description: Boolean representing whether or not file quarantine succeeded.
      default_field: false
    - name: Ext.temp_file_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint where a copy of the file is being stored.  Used to make ephemeral files retrievable.
      default_field: false
    - name: Ext.windows
      level: custom
      type: object
      description: Platform-specific Windows fields
      default_field: false
    - name: Ext.windows.zone_identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: Windows zone identifier for a file
      default_field: false
    - name: accessed
      level: extended
      type: date
      description: 'Last time the file was accessed.

        Note that not all filesystems keep track of access time.'
    - name: attributes
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of file attributes.

        Attributes names will vary by platform. Here''s a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.'
      example: '["readonly", "system"]'
      default_field: false
    - name: code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: created
      level: extended
      type: date
      description: 'File creation time.

        Note that not all filesystems store the creation time.'
    - name: ctime
      level: extended
      type: date
      description: 'Last time the file attributes or metadata changed.

        Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.'
    - name: device
      level: extended
      type: keyword
      ignore_above: 1024
      description: Device that is the source of the file.
      example: sda
    - name: directory
      level: extended
      type: keyword
      ignore_above: 1024
      description: Directory where the file is located. It should include the drive letter, when appropriate.
      example: /home/alice
    - name: drive_letter
      level: extended
      type: keyword
      ignore_above: 1
      description: 'Drive letter where the file is located. This field is only relevant on Windows.

        The value should be uppercase, and not include the colon.'
      example: C
      default_field: false
    - name: extension
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'File extension, excluding the leading dot.

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
      example: png
    - name: gid
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
    - name: group
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
    - name: hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
    - name: hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
    - name: hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
    - name: hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
    - name: inode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Inode representing the file in the filesystem.
      example: '256383'
    - name: mime_type
      level: extended
      type: keyword
      ignore_above: 1024
      description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
      default_field: false
    - name: mode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Mode of the file in octal representation.
      example: '0640'
    - name: mtime
      level: extended
      type: date
      description: Last time the file content was modified.
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the file including the extension, without the directory.
      example: example.png
    - name: owner
      level: extended
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
    - name: path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
      example: /home/alice/example.png
    - name: pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: size
      level: extended
      type: long
      description: 'File size in bytes.

        Only relevant when `file.type` is "file".'
      example: 16384
    - name: target_path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Target path for symlinks.
    - name: type
      level: extended
      type: keyword
      ignore_above: 1024
      description: File type (file, dir, or symlink).
      example: file
    - name: uid
      level: extended
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
- name: group
  title: Group
  group: 2
  description: The group fields are meant to represent groups that are relevant to the event.
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.real
      level: custom
      type: object
      description: Group info prior to any setgid operations.
      default_field: false
    - name: Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
- name: host
  title: Host
  group: 2
  description: 'A host is defined as a general computing instance.

    ECS host.* fields should be populated with details about the host on which the event happened, or from which the measurement was taken. Host types include hardware, virtual machines, Docker containers, and Kubernetes nodes.'
  type: group
  fields:
    - name: architecture
      level: core
      type: keyword
      ignore_above: 1024
      description: Operating system architecture.
      example: x86_64
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the domain of which the host is a member.

        For example, on Windows this could be the host''s Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host''s LDAP provider.'
      example: CONTOSO
      default_field: false
    - name: geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
    - name: geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
    - name: geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
    - name: geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
    - name: geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
    - name: geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
    - name: geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
    - name: geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
    - name: geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
    - name: hostname
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Hostname of the host.

        It normally contains what the `hostname` command returns on the host machine.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Unique host id.

        As hostname is not always unique, use values that are meaningful in your environment.

        Example: The current usage of `beat.name`.'
    - name: ip
      level: core
      type: ip
      description: Host ip addresses.
    - name: mac
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Host MAC addresses.

        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.'
      example: '["00-00-5E-00-53-23", "00-00-5E-00-53-24"]'
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the host.

        It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.'
    - name: os.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: os.Ext.variant
      level: custom
      type: keyword
      ignore_above: 1024
      description: A string value or phrase that further aid to classify or qualify the operating system (OS).  For example the distribution for a Linux OS will be entered in this field.
      example: Ubuntu
      default_field: false
    - name: os.family
      level: extended
      type: keyword
      ignore_above: 1024
      description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
    - name: os.full
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, including the version or code name.
      example: Mac OS Mojave
    - name: os.kernel
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
    - name: os.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Operating system name, without the version.
      example: Mac OS X
    - name: os.platform
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
    - name: os.version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Operating system version as a raw string.
      example: 10.14.1
    - name: type
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Type of host.

        For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.'
    - name: uptime
      level: extended
      type: long
      description: Seconds the host has been up.
      example: 1325
    - name: user.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: user.Ext.real
      level: custom
      type: object
      description: User info prior to any setuid operations.
      default_field: false
    - name: user.Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: One or multiple unique identifiers of the user.
      default_field: false
    - name: user.Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Short name or login of the user.
      default_field: false
    - name: user.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: user.email
      level: extended
      type: keyword
      ignore_above: 1024
      description: User email address.
    - name: user.full_name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: User's full name, if available.
      example: Albert Einstein
    - name: user.group.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: user.group.Ext.real
      level: custom
      type: object
      description: Group info prior to any setgid operations.
      default_field: false
    - name: user.group.Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: user.group.Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: user.group.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: user.group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
    - name: user.group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
    - name: user.hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique user hash to correlate information for a user in anonymized form.

        Useful if `user.id` or `user.name` contain confidential information and cannot be used.'
    - name: user.id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
    - name: user.name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: Short name or login of the user.
      example: albert
- name: process
  title: Process
  group: 2
  description: 'These fields contain information about a process.

    These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.ancestry
      level: custom
      type: keyword
      ignore_above: 1024
      description: An array of entity_ids indicating the ancestors for this event
      default_field: false
    - name: Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: Ext.authentication_id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process authentication ID
      default_field: false
    - name: Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: Ext.dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: Ext.dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: Ext.dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: Ext.dll.Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: Ext.dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: Ext.dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: Ext.dll.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: Ext.dll.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: Ext.dll.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: Ext.dll.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: Ext.dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: Ext.dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: Ext.dll.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: Ext.dll.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: Ext.dll.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: Ext.dll.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: Ext.dll.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: Ext.dll.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: Ext.malware_classification.features
      level: custom
      type: object
      description: Intermediate field included by adding option with subset
      enabled: false
      default_field: false
    - name: Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: Ext.memory_region.allocation_base
      level: custom
      type: unsigned_long
      description: Base address of the memory allocation containing the memory region.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.allocation_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original memory protection requested when the memory was allocated. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: Ext.memory_region.allocation_size
      level: custom
      type: unsigned_long
      description: Original memory size requested when the memory was allocated.
      example: 4096
      default_field: false
    - name: Ext.memory_region.allocation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: The memory allocation type. Example values include "IMAGE", "MAPPED", and "PRIVATE".
      example: PRIVATE
      default_field: false
    - name: Ext.memory_region.bytes_address
      level: custom
      type: unsigned_long
      description: The address where bytes_compressed begins.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.bytes_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of bytes_address the memory allocation. Equal to bytes_address - allocation_base.
      example: 0
      default_field: false
    - name: Ext.memory_region.bytes_compressed
      level: custom
      type: keyword
      description: Up to 4MB of raw data from the memory allocation. This is compressed with zlib.To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      example: eJzzSM3JyVcIzy/KSVEEABxJBD4=
      index: false
      doc_values: false
      default_field: false
    - name: Ext.memory_region.bytes_compressed_present
      level: custom
      type: boolean
      description: Whether bytes_compressed is present in this event.
      example: false
      default_field: false
    - name: Ext.memory_region.malware_signature.all_names
      level: custom
      type: keyword
      ignore_above: 1024
      description: A sequence of signature names matched.
      example: Windows.EICAR.Not-a-virus
      default_field: false
    - name: Ext.memory_region.malware_signature.primary
      level: custom
      type: object
      description: The first matching details.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: The id of the first yara rule matched.
      default_field: false
    - name: Ext.memory_region.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: The name of the first yara rule matched.
      default_field: false
    - name: Ext.memory_region.mapped_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: Ext.memory_region.mapped_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: Ext.memory_region.mapped_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: Ext.memory_region.mapped_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: Ext.memory_region.mapped_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: Ext.memory_region.mapped_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: Ext.memory_region.mapped_pe_detected
      level: custom
      type: boolean
      description: Whether the file at mapped_path is an executable.
      example: false
      default_field: false
    - name: Ext.memory_region.memory_pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: Ext.memory_region.memory_pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: Ext.memory_region.memory_pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: Ext.memory_region.memory_pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: Ext.memory_region.memory_pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: Ext.memory_region.memory_pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: Ext.memory_region.memory_pe_detected
      level: custom
      type: boolean
      description: Whether an executable file was found in memory.
      example: false
      default_field: false
    - name: Ext.memory_region.region_base
      level: custom
      type: unsigned_long
      description: Base address of the memory region.
      example: 2431737462784
      default_field: false
    - name: Ext.memory_region.region_protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection of the memory region. Example values include "RWX" and "R-X".
      example: RWX
      default_field: false
    - name: Ext.memory_region.region_size
      level: custom
      type: unsigned_long
      description: Size of the memory region.
      example: 4096
      default_field: false
    - name: Ext.memory_region.region_state
      level: custom
      type: keyword
      ignore_above: 1024
      description: State of the memory region. Example values include "RESERVE", "COMMIT", and "FREE".
      example: COMMIT
      default_field: false
    - name: Ext.memory_region.strings
      level: custom
      type: keyword
      description: Array of strings found within the memory region.
      index: false
      doc_values: false
      default_field: false
    - name: Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: Ext.services
      level: custom
      type: keyword
      ignore_above: 1024
      description: Services running in this process.
      default_field: false
    - name: Ext.session
      level: custom
      type: keyword
      ignore_above: 1024
      description: Session information for the current process
      default_field: false
    - name: Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: Ext.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: User associated with the running process.
      default_field: false
    - name: args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
    - name: args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
    - name: exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
    - name: hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
    - name: hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
    - name: hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
    - name: parent.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: parent.Ext.architecture
      level: custom
      type: keyword
      ignore_above: 1024
      description: Process architecture.  It can differ from host architecture.
      example: x86_64
      default_field: false
    - name: parent.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: parent.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: parent.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: parent.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: parent.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: parent.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: parent.Ext.dll.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature.exists
      level: custom
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature.subject_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: parent.Ext.dll.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: parent.Ext.dll.Ext.compile_time
      level: custom
      type: date
      description: Timestamp from when the module was compiled.
      default_field: false
    - name: parent.Ext.dll.Ext.mapped_address
      level: custom
      type: unsigned_long
      description: The base address where this module is loaded.
      default_field: false
    - name: parent.Ext.dll.Ext.mapped_size
      level: custom
      type: unsigned_long
      description: The size of this module's memory mapping, in bytes.
      default_field: false
    - name: parent.Ext.dll.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: parent.Ext.dll.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: parent.Ext.dll.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: parent.Ext.dll.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: parent.Ext.dll.name
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      default_field: false
    - name: parent.Ext.dll.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      default_field: false
    - name: parent.Ext.dll.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: parent.Ext.dll.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: parent.Ext.dll.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: parent.Ext.dll.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: parent.Ext.dll.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: parent.Ext.dll.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: parent.Ext.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Indicates the protection level of this process.  Uses the same syntax as Process Explorer. Examples include PsProtectedSignerWinTcb, PsProtectedSignerWinTcb-Light, and PsProtectedSignerWindows-Light.
      default_field: false
    - name: parent.Ext.real
      level: custom
      type: object
      description: The field set containing process info in case of any pid spoofing. This is mainly useful for process.parent.
      default_field: false
    - name: parent.Ext.real.pid
      level: custom
      type: long
      description: For process.parent this will be the ppid of the process that actually spawned the current process.
      default_field: false
    - name: parent.Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: parent.Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: parent.Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: parent.Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: parent.Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: parent.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: parent.Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: parent.Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: parent.Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: parent.Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: parent.Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: parent.Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: parent.Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: parent.Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: parent.Ext.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: User associated with the running process.
      default_field: false
    - name: parent.args
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of process arguments, starting with the absolute path to the executable.

        May be filtered to protect sensitive information.'
      example: '["/usr/bin/ssh", "-l", "user", "10.0.0.16"]'
      default_field: false
    - name: parent.args_count
      level: extended
      type: long
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.'
      example: 4
      default_field: false
    - name: parent.command_line
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Full command line that started the process, including the absolute path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      default_field: false
    - name: parent.entity_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.'
      example: c2c455d9f99375d
      default_field: false
    - name: parent.executable
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      default_field: false
    - name: parent.exit_code
      level: extended
      type: long
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process start).'
      example: 137
      default_field: false
    - name: parent.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: parent.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: parent.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: parent.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: parent.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      default_field: false
    - name: parent.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: parent.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: parent.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: parent.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: parent.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: parent.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: parent.pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
      default_field: false
    - name: parent.pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
      default_field: false
    - name: parent.ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
      default_field: false
    - name: parent.start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: parent.thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
      default_field: false
    - name: parent.thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
      default_field: false
    - name: parent.title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
      default_field: false
    - name: parent.uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
      default_field: false
    - name: parent.working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: The working directory of the process.
      example: /home/alice
      default_field: false
    - name: pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: pgid
      level: extended
      type: long
      format: string
      description: Identifier of the group of processes the process belongs to.
    - name: pid
      level: core
      type: long
      format: string
      description: Process id.
      example: 4242
    - name: ppid
      level: extended
      type: long
      format: string
      description: Parent process' pid.
      example: 4241
    - name: start
      level: extended
      type: date
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
    - name: thread.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: thread.Ext.call_stack
      level: custom
      type: group
      description: Fields describing a stack frame.  call_stack is expected to be an array where each array element represents a stack frame.
      enabled: false
      default_field: false
    - name: thread.Ext.call_stack.instruction_pointer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The return address of this stack frame.
      default_field: false
    - name: thread.Ext.call_stack.memory_section.address
      level: custom
      type: keyword
      ignore_above: 1024
      description: Base address of the memory region containing `instruction_pointer`.  Corresponds to `MEMORY_BASIC_INFORMATION.BaseAddress`
      default_field: false
    - name: thread.Ext.call_stack.memory_section.protection
      level: custom
      type: keyword
      ignore_above: 1024
      description: Memory protection flags of this memory region.  Corresponds to `MEMORY_BASIC_INFORMATION.Protect`
      default_field: false
    - name: thread.Ext.call_stack.memory_section.size
      level: custom
      type: keyword
      ignore_above: 1024
      description: Size of the memory region containing `instruction_pointer`.  Corresponds to `MEMORY_BASIC_INFORMATION.RegionSize`
      default_field: false
    - name: thread.Ext.call_stack.module_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: The DLL/module containing `instruction_pointer`.
      default_field: false
    - name: thread.Ext.call_stack.rva
      level: custom
      type: keyword
      ignore_above: 1024
      description: The relative virtual address of `instruction_pointer`.  Computed as `instruction_pointer - MEMORY_BASIC_INFORMATION.AllocationBase`.
      default_field: false
    - name: thread.Ext.call_stack.symbol_info
      level: custom
      type: keyword
      ignore_above: 1024
      description: The nearest symbol for `instruction_pointer`.
      default_field: false
    - name: thread.Ext.parameter
      level: custom
      type: unsigned_long
      description: When a thread is created, this is the raw numerical value of its parameter.
      default_field: false
    - name: thread.Ext.parameter_bytes_compressed
      level: custom
      type: keyword
      description: Up to 512KB of raw data from the thread parameter, if it is a valid pointer. This is compressed with zlib. To reduce data volume, this is de-duplicated on the endpoint, and may be missing from many alerts if the same data would be sent multiple times.
      index: false
      doc_values: false
      default_field: false
    - name: thread.Ext.parameter_bytes_compressed_present
      level: custom
      type: boolean
      description: Whether parameter_bytes_compressed is present in this event.
      default_field: false
    - name: thread.Ext.service
      level: custom
      type: keyword
      ignore_above: 1024
      description: Service associated with the thread.
      example: VaultSvc
      default_field: false
    - name: thread.Ext.start
      level: custom
      type: date
      description: The time the thread started.
      example: '2016-05-23T08:05:34.853Z'
      default_field: false
    - name: thread.Ext.start_address
      level: custom
      type: unsigned_long
      description: Memory address where the thread began execution.
      example: 4194304
      default_field: false
    - name: thread.Ext.start_address_allocation_offset
      level: custom
      type: unsigned_long
      description: Offset of start_address into the memory allocation. Equal to start_address - start_address_details.allocation_base.
      example: 0
      default_field: false
    - name: thread.Ext.start_address_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: A few (typically 32) raw opcode bytes at the thread start address, hex-encoded.
      example: c3cc0000cccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      default_field: false
    - name: thread.Ext.start_address_bytes_disasm
      level: custom
      type: keyword
      ignore_above: 1024
      description: The bytes at the thread start address, disassembled into human-readable assembly code.
      example: ret\nint3
      default_field: false
    - name: thread.Ext.start_address_bytes_disasm_hash
      level: custom
      type: keyword
      ignore_above: 1024
      description: The bytes at the thread start address, with immediate values capped to 0x100, disassembled into human-readable assembly code, then hashed.
      example: aacb1c801f9030f799e2f7350f053ebb760d42cbe81cd65021063c1c4d1a9c9c
      default_field: false
    - name: thread.Ext.start_address_module
      level: custom
      type: keyword
      ignore_above: 1024
      description: The dll/module where the thread began execution.
      example: C:\Program Files\VMware\VMware Tools\vmtoolsd.exe
      default_field: false
    - name: thread.Ext.token.domain
      level: custom
      type: keyword
      ignore_above: 1024
      description: Domain of token user.
      default_field: false
    - name: thread.Ext.token.elevation
      level: custom
      type: boolean
      description: Whether the token is elevated or not
      default_field: false
    - name: thread.Ext.token.elevation_type
      level: custom
      type: keyword
      ignore_above: 1024
      description: What level of elevation the token has
      example: one of "default", "full", "limited"
      default_field: false
    - name: thread.Ext.token.impersonation_level
      level: custom
      type: keyword
      ignore_above: 1024
      description: Impersonation level. Only valid for impersonation tokens.
      default_field: false
    - name: thread.Ext.token.integrity_level
      level: custom
      type: long
      description: Numeric integrity level.
      default_field: false
    - name: thread.Ext.token.integrity_level_name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Human readable integrity level.
      example: one of "system", "high", "medium", "low", "untrusted"
      default_field: false
    - name: thread.Ext.token.is_appcontainer
      level: custom
      type: boolean
      description: Whether or not this is an appcontainer token.
      default_field: false
    - name: thread.Ext.token.privileges
      level: custom
      type: nested
      description: Array describing the privileges associated with the token.
      default_field: false
    - name: thread.Ext.token.privileges.description
      level: custom
      type: keyword
      ignore_above: 1024
      description: Description of the privilege.
      default_field: false
    - name: thread.Ext.token.privileges.enabled
      level: custom
      type: boolean
      description: Whether or not the privilege is enabled.
      default_field: false
    - name: thread.Ext.token.privileges.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the privilege.
      default_field: false
    - name: thread.Ext.token.sid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Token user's Security Identifier (SID).
      default_field: false
    - name: thread.Ext.token.type
      level: custom
      type: keyword
      ignore_above: 1024
      description: Type of the token, either primary or impersonation.
      default_field: false
    - name: thread.Ext.token.user
      level: custom
      type: keyword
      ignore_above: 1024
      description: Username of token owner.
      default_field: false
    - name: thread.Ext.uptime
      level: custom
      type: long
      description: Seconds since thread started.
      default_field: false
    - name: thread.id
      level: extended
      type: long
      format: string
      description: Thread ID.
      example: 4242
    - name: thread.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Thread name.
      example: thread-0
    - name: title
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.'
    - name: uptime
      level: extended
      type: long
      description: Seconds the process has been up.
      example: 1325
    - name: working_directory
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          default_field: false
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
          default_field: false
      description: The working directory of the process.
      example: /home/alice
- name: registry
  title: Registry
  group: 2
  description: Fields related to Windows Registry operations.
  type: group
  fields:
    - name: data.strings
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Content when writing string types.

        Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).'
      example: '["C:\rta\red_ttp\bin\myapp.exe"]'
      default_field: false
    - name: path
      level: core
      type: keyword
      ignore_above: 1024
      description: Full path, including hive, key and value
      example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
      default_field: false
    - name: value
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the value written.
      example: Debugger
      default_field: false
- name: rule
  title: Rule
  group: 2
  description: 'Rule fields are used to capture the specifics of any observer or agent rules that generate alerts or other notable events.

    Examples of data sources that would populate the rule fields include: network admission control platforms, network or host IDS/IPS, network firewalls, web application firewalls, url filters, endpoint detection and response (EDR) systems, etc.'
  type: group
  fields:
    - name: author
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.
      example: '["Star-Lord"]'
      default_field: false
    - name: category
      level: extended
      type: keyword
      ignore_above: 1024
      description: A categorization value keyword used by the entity using the rule for detection of this event.
      example: Attempted Information Leak
      default_field: false
    - name: description
      level: extended
      type: keyword
      ignore_above: 1024
      description: The description of the rule generating the event.
      example: Block requests to public DNS over HTTPS / TLS protocols
      default_field: false
    - name: id
      level: extended
      type: keyword
      ignore_above: 1024
      description: A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.
      example: 101
      default_field: false
    - name: license
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the license under which the rule used to generate this event is made available.
      example: Apache 2.0
      default_field: false
    - name: name
      level: extended
      type: keyword
      ignore_above: 1024
      description: The name of the rule or signature generating the event.
      example: BLOCK_DNS_over_TLS
      default_field: false
    - name: reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Reference URL to additional information about the rule used to generate this event.

        The URL can point to the vendor''s documentation about the rule. If that''s not available, it can also be a link to a more general page describing this type of alert.'
      example: https://en.wikipedia.org/wiki/DNS_over_TLS
      default_field: false
    - name: ruleset
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
      example: Standard_Protocol_Filters
      default_field: false
    - name: uuid
      level: extended
      type: keyword
      ignore_above: 1024
      description: A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.
      example: 1100110011
      default_field: false
    - name: version
      level: extended
      type: keyword
      ignore_above: 1024
      description: The version / revision of the rule being used for analysis.
      example: 1.1
      default_field: false
- name: source
  title: Source
  group: 2
  description: 'Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.

    Source fields are usually populated in conjunction with destination fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.'
  type: group
  fields:
    - name: geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
    - name: geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
    - name: geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
    - name: geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
    - name: geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
    - name: geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
    - name: geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
    - name: geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
    - name: geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
    - name: ip
      level: core
      type: ip
      description: IP address of the source (IPv4 or IPv6).
- name: threat
  title: Threat
  group: 2
  description: "Fields to classify events and alerts according to a threat taxonomy such as the MITRE ATT&CK® framework.\nThese fields are for users to classify alerts from all of their sources (e.g. IDS, NGFW, etc.) within a common taxonomy. The threat.tactic.* are meant to capture the high level category of the threat (e.g. \"impact\"). The threat.technique.* fields are meant to capture which kind of approach is used by this detected threat, to accomplish the goal (e.g. \"endpoint denial of service\")."
  type: group
  fields:
    - name: enrichments
      level: extended
      type: nested
      description: A list of associated indicators objects enriching the event, and the context of that association/enrichment.
      default_field: false
    - name: enrichments.indicator
      level: extended
      type: object
      description: Object containing associated indicators enriching the event.
      default_field: false
    - name: enrichments.indicator.as.number
      level: extended
      type: long
      description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      default_field: false
    - name: enrichments.indicator.as.organization.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Organization name.
      example: Google LLC
      default_field: false
    - name: enrichments.indicator.confidence
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Identifies the confidence rating assigned by the provider using STIX confidence scales. Expected values:\n  * Not Specified, None, Low, Medium, High\n  * 0-10\n  * Admirality Scale (1-6)\n  * DNI Scale (5-95)\n  * WEP Scale (Impossible - Certain)"
      example: High
      default_field: false
    - name: enrichments.indicator.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Describes the type of action conducted by the threat.
      example: IP x.x.x.x was observed delivering the Angler EK.
      default_field: false
    - name: enrichments.indicator.email.address
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies a threat indicator as an email address (irrespective of direction).
      example: phish@example.com
      default_field: false
    - name: enrichments.indicator.file.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.Ext.entropy
      level: custom
      type: double
      description: Entropy calculation of file's header and footer used to check file integrity.
      default_field: false
    - name: enrichments.indicator.file.Ext.entry_modified
      level: custom
      type: double
      description: Time of last status change.  See `st_ctim` member of `struct stat`.
      default_field: false
    - name: enrichments.indicator.file.Ext.header_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: First 16 bytes of file used to check file integrity.
      default_field: false
    - name: enrichments.indicator.file.Ext.header_data
      level: custom
      type: text
      description: First 16 bytes of file used to check file integrity.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature
      level: custom
      type: nested
      description: Nested version of malware_signature fieldset.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.all_names
      level: custom
      type: text
      description: The concatenated names of all yara signatures
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.identifier
      level: custom
      type: text
      description: Malware artifact identifier.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary
      level: custom
      type: nested
      description: Primary malware signature match.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.matches
      level: custom
      type: nested
      description: An array of bytes representing yara signature matches
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.signature
      level: custom
      type: nested
      description: Primary malware signature match.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.signature.hash
      level: custom
      type: nested
      description: Primary malware signature hash.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.signature.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature sha256.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature id.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature name.
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.secondary
      level: custom
      type: nested
      description: An array of malware signature matches
      default_field: false
    - name: enrichments.indicator.file.Ext.malware_signature.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature version.
      default_field: false
    - name: enrichments.indicator.file.Ext.monotonic_id
      level: custom
      type: unsigned_long
      description: File event monotonic ID.
      default_field: false
    - name: enrichments.indicator.file.Ext.original
      level: custom
      type: object
      description: Original file information during a modification event.
      default_field: false
    - name: enrichments.indicator.file.Ext.original.gid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
      default_field: false
    - name: enrichments.indicator.file.Ext.original.group
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
      default_field: false
    - name: enrichments.indicator.file.Ext.original.mode
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file mode prior to a modification event
      default_field: false
    - name: enrichments.indicator.file.Ext.original.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file name prior to a modification event
      default_field: false
    - name: enrichments.indicator.file.Ext.original.owner
      level: custom
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
      default_field: false
    - name: enrichments.indicator.file.Ext.original.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file path prior to a modification event
      default_field: false
    - name: enrichments.indicator.file.Ext.original.uid
      level: custom
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      default_field: false
    - name: enrichments.indicator.file.Ext.quarantine_message
      level: custom
      type: keyword
      ignore_above: 1024
      description: Message describing quarantine results.
      default_field: false
    - name: enrichments.indicator.file.Ext.quarantine_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint the quarantined file was originally.
      default_field: false
    - name: enrichments.indicator.file.Ext.quarantine_result
      level: custom
      type: boolean
      description: Boolean representing whether or not file quarantine succeeded.
      default_field: false
    - name: enrichments.indicator.file.Ext.temp_file_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint where a copy of the file is being stored.  Used to make ephemeral files retrievable.
      default_field: false
    - name: enrichments.indicator.file.Ext.windows
      level: custom
      type: object
      description: Platform-specific Windows fields
      default_field: false
    - name: enrichments.indicator.file.Ext.windows.zone_identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: Windows zone identifier for a file
      default_field: false
    - name: enrichments.indicator.file.accessed
      level: extended
      type: date
      description: 'Last time the file was accessed.

        Note that not all filesystems keep track of access time.'
      default_field: false
    - name: enrichments.indicator.file.attributes
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of file attributes.

        Attributes names will vary by platform. Here''s a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.'
      example: '["readonly", "system"]'
      default_field: false
    - name: enrichments.indicator.file.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: enrichments.indicator.file.code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: enrichments.indicator.file.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: enrichments.indicator.file.code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: enrichments.indicator.file.code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: enrichments.indicator.file.created
      level: extended
      type: date
      description: 'File creation time.

        Note that not all filesystems store the creation time.'
      default_field: false
    - name: enrichments.indicator.file.ctime
      level: extended
      type: date
      description: 'Last time the file attributes or metadata changed.

        Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.'
      default_field: false
    - name: enrichments.indicator.file.device
      level: extended
      type: keyword
      ignore_above: 1024
      description: Device that is the source of the file.
      example: sda
      default_field: false
    - name: enrichments.indicator.file.directory
      level: extended
      type: keyword
      ignore_above: 1024
      description: Directory where the file is located. It should include the drive letter, when appropriate.
      example: /home/alice
      default_field: false
    - name: enrichments.indicator.file.drive_letter
      level: extended
      type: keyword
      ignore_above: 1
      description: 'Drive letter where the file is located. This field is only relevant on Windows.

        The value should be uppercase, and not include the colon.'
      example: C
      default_field: false
    - name: enrichments.indicator.file.elf.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: Machine architecture of the ELF file.
      example: x86-64
      default_field: false
    - name: enrichments.indicator.file.elf.byte_order
      level: extended
      type: keyword
      ignore_above: 1024
      description: Byte sequence of ELF file.
      example: Little Endian
      default_field: false
    - name: enrichments.indicator.file.elf.cpu_type
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU type of the ELF file.
      example: Intel
      default_field: false
    - name: enrichments.indicator.file.elf.creation_date
      level: extended
      type: date
      description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      default_field: false
    - name: enrichments.indicator.file.elf.exports
      level: extended
      type: flattened
      description: List of exported element names and types.
      default_field: false
    - name: enrichments.indicator.file.elf.header.abi_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of the ELF Application Binary Interface (ABI).
      default_field: false
    - name: enrichments.indicator.file.elf.header.class
      level: extended
      type: keyword
      ignore_above: 1024
      description: Header class of the ELF file.
      default_field: false
    - name: enrichments.indicator.file.elf.header.data
      level: extended
      type: keyword
      ignore_above: 1024
      description: Data table of the ELF header.
      default_field: false
    - name: enrichments.indicator.file.elf.header.entrypoint
      level: extended
      type: long
      format: string
      description: Header entrypoint of the ELF file.
      default_field: false
    - name: enrichments.indicator.file.elf.header.object_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: '"0x1" for original ELF files.'
      default_field: false
    - name: enrichments.indicator.file.elf.header.os_abi
      level: extended
      type: keyword
      ignore_above: 1024
      description: Application Binary Interface (ABI) of the Linux OS.
      default_field: false
    - name: enrichments.indicator.file.elf.header.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: Header type of the ELF file.
      default_field: false
    - name: enrichments.indicator.file.elf.header.version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of the ELF header.
      default_field: false
    - name: enrichments.indicator.file.elf.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: enrichments.indicator.file.elf.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the ELF file.

        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.'
      default_field: false
    - name: enrichments.indicator.file.elf.sections.chi2
      level: extended
      type: long
      format: number
      description: Chi-square probability distribution of the section.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.flags
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List flags.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List name.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.physical_offset
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List offset.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: ELF Section List physical size.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List type.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.virtual_address
      level: extended
      type: long
      format: string
      description: ELF Section List virtual address.
      default_field: false
    - name: enrichments.indicator.file.elf.sections.virtual_size
      level: extended
      type: long
      format: string
      description: ELF Section List virtual size.
      default_field: false
    - name: enrichments.indicator.file.elf.segments
      level: extended
      type: nested
      description: 'An array containing an object for each segment of the ELF file.

        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.'
      default_field: false
    - name: enrichments.indicator.file.elf.segments.sections
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF object segment sections.
      default_field: false
    - name: enrichments.indicator.file.elf.segments.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF object segment type.
      default_field: false
    - name: enrichments.indicator.file.elf.shared_libraries
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of shared libraries used by this ELF object.
      default_field: false
    - name: enrichments.indicator.file.elf.telfhash
      level: extended
      type: keyword
      ignore_above: 1024
      description: telfhash symbol hash for ELF file.
      default_field: false
    - name: enrichments.indicator.file.extension
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'File extension, excluding the leading dot.

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
      example: png
      default_field: false
    - name: enrichments.indicator.file.gid
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
      default_field: false
    - name: enrichments.indicator.file.group
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
      default_field: false
    - name: enrichments.indicator.file.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: enrichments.indicator.file.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: enrichments.indicator.file.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: enrichments.indicator.file.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: enrichments.indicator.file.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: enrichments.indicator.file.inode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Inode representing the file in the filesystem.
      example: '256383'
      default_field: false
    - name: enrichments.indicator.file.mime_type
      level: extended
      type: keyword
      ignore_above: 1024
      description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
      default_field: false
    - name: enrichments.indicator.file.mode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Mode of the file in octal representation.
      example: '0640'
      default_field: false
    - name: enrichments.indicator.file.mtime
      level: extended
      type: date
      description: Last time the file content was modified.
      default_field: false
    - name: enrichments.indicator.file.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the file including the extension, without the directory.
      example: example.png
      default_field: false
    - name: enrichments.indicator.file.owner
      level: extended
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
      default_field: false
    - name: enrichments.indicator.file.path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
      example: /home/alice/example.png
      default_field: false
    - name: enrichments.indicator.file.pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: enrichments.indicator.file.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: enrichments.indicator.file.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: enrichments.indicator.file.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: enrichments.indicator.file.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: enrichments.indicator.file.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: enrichments.indicator.file.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: enrichments.indicator.file.size
      level: extended
      type: long
      description: 'File size in bytes.

        Only relevant when `file.type` is "file".'
      example: 16384
      default_field: false
    - name: enrichments.indicator.file.target_path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Target path for symlinks.
      default_field: false
    - name: enrichments.indicator.file.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: File type (file, dir, or symlink).
      example: file
      default_field: false
    - name: enrichments.indicator.file.uid
      level: extended
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      default_field: false
    - name: enrichments.indicator.first_seen
      level: extended
      type: date
      description: The date and time when intelligence source first reported sighting this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: enrichments.indicator.geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
      default_field: false
    - name: enrichments.indicator.geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: enrichments.indicator.geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
      default_field: false
    - name: enrichments.indicator.geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
      default_field: false
    - name: enrichments.indicator.geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
      default_field: false
    - name: enrichments.indicator.geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      default_field: false
    - name: enrichments.indicator.geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      default_field: false
    - name: enrichments.indicator.geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: enrichments.indicator.geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
      default_field: false
    - name: enrichments.indicator.geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
      default_field: false
    - name: enrichments.indicator.geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
    - name: enrichments.indicator.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: enrichments.indicator.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: enrichments.indicator.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: enrichments.indicator.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: enrichments.indicator.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: enrichments.indicator.ip
      level: extended
      type: ip
      description: Identifies a threat indicator as an IP address (irrespective of direction).
      example: 1.2.3.4
      default_field: false
    - name: enrichments.indicator.last_seen
      level: extended
      type: date
      description: The date and time when intelligence source last reported sighting this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: enrichments.indicator.marking.tlp
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Traffic Light Protocol sharing markings. Recommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED"
      example: White
      default_field: false
    - name: enrichments.indicator.modified_at
      level: extended
      type: date
      description: The date and time when intelligence source last modified information for this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: enrichments.indicator.pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: enrichments.indicator.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: enrichments.indicator.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: enrichments.indicator.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: enrichments.indicator.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: enrichments.indicator.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: enrichments.indicator.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: enrichments.indicator.port
      level: extended
      type: long
      description: Identifies a threat indicator as a port number (irrespective of direction).
      example: 443
      default_field: false
    - name: enrichments.indicator.provider
      level: extended
      type: keyword
      ignore_above: 1024
      description: The name of the indicator's provider.
      example: lrz_urlhaus
      default_field: false
    - name: enrichments.indicator.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: Reference URL linking to additional information about this indicator.
      example: https://system.example.com/indicator/0001234
      default_field: false
    - name: enrichments.indicator.registry.data.bytes
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Original bytes written with base64 encoding.

        For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.'
      example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
      default_field: false
    - name: enrichments.indicator.registry.data.strings
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Content when writing string types.

        Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).'
      example: '["C:\rta\red_ttp\bin\myapp.exe"]'
      default_field: false
    - name: enrichments.indicator.registry.data.type
      level: core
      type: keyword
      ignore_above: 1024
      description: Standard registry type for encoding contents
      example: REG_SZ
      default_field: false
    - name: enrichments.indicator.registry.hive
      level: core
      type: keyword
      ignore_above: 1024
      description: Abbreviated name for the hive.
      example: HKLM
      default_field: false
    - name: enrichments.indicator.registry.key
      level: core
      type: keyword
      ignore_above: 1024
      description: Hive-relative path of keys.
      example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
      default_field: false
    - name: enrichments.indicator.registry.path
      level: core
      type: keyword
      ignore_above: 1024
      description: Full path, including hive, key and value
      example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
      default_field: false
    - name: enrichments.indicator.registry.value
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the value written.
      example: Debugger
      default_field: false
    - name: enrichments.indicator.scanner_stats
      level: extended
      type: long
      description: Count of AV/EDR vendors that successfully detected malicious file or URL.
      example: 4
      default_field: false
    - name: enrichments.indicator.sightings
      level: extended
      type: long
      description: Number of times this indicator was observed conducting threat activity.
      example: 20
      default_field: false
    - name: enrichments.indicator.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Type of indicator as represented by Cyber Observable in STIX 2.0. Recommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate"
      example: ipv4-addr
      default_field: false
    - name: enrichments.indicator.url.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Domain of the url, such as "www.elastic.co".

        In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.

        If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.'
      example: www.elastic.co
      default_field: false
    - name: enrichments.indicator.url.extension
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The field contains the file extension from the original request url, excluding the leading dot.

        The file extension is only set if it exists, as not every url has a file extension.

        The leading period must not be included. For example, the value must be "png", not ".png".

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
      example: png
      default_field: false
    - name: enrichments.indicator.url.fragment
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Portion of the url after the `#`, such as "top".

        The `#` is not part of the fragment.'
      default_field: false
    - name: enrichments.indicator.url.full
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
      example: https://www.elastic.co:443/search?q=elasticsearch#top
      default_field: false
    - name: enrichments.indicator.url.original
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Unmodified original url as seen in the event source.

        Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.

        This field is meant to represent the URL as it was observed, complete or not.'
      example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch
      default_field: false
    - name: enrichments.indicator.url.password
      level: extended
      type: keyword
      ignore_above: 1024
      description: Password of the request.
      default_field: false
    - name: enrichments.indicator.url.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Path of the request, such as "/search".
      default_field: false
    - name: enrichments.indicator.url.port
      level: extended
      type: long
      format: string
      description: Port of the request, such as 443.
      example: 443
      default_field: false
    - name: enrichments.indicator.url.query
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The query field describes the query string of the request, such as "q=elasticsearch".

        The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.'
      default_field: false
    - name: enrichments.indicator.url.registered_domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The highest registered url domain, stripped of the subdomain.

        For example, the registered domain for "foo.example.com" is "example.com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".'
      example: example.com
      default_field: false
    - name: enrichments.indicator.url.scheme
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Scheme of the request, such as "https".

        Note: The `:` is not part of the scheme.'
      example: https
      default_field: false
    - name: enrichments.indicator.url.subdomain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.

        For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.'
      example: east
      default_field: false
    - name: enrichments.indicator.url.top_level_domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      default_field: false
    - name: enrichments.indicator.url.username
      level: extended
      type: keyword
      ignore_above: 1024
      description: Username of the request.
      default_field: false
    - name: enrichments.indicator.x509.alternative_names
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
      example: '*.elastic.co'
      default_field: false
    - name: enrichments.indicator.x509.issuer.common_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of common name (CN) of issuing certificate authority.
      example: Example SHA2 High Assurance Server CA
      default_field: false
    - name: enrichments.indicator.x509.issuer.country
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of country (C) codes
      example: US
      default_field: false
    - name: enrichments.indicator.x509.issuer.distinguished_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Distinguished name (DN) of issuing certificate authority.
      example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
      default_field: false
    - name: enrichments.indicator.x509.issuer.locality
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
      example: Mountain View
      default_field: false
    - name: enrichments.indicator.x509.issuer.organization
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of issuing certificate authority.
      example: Example Inc
      default_field: false
    - name: enrichments.indicator.x509.issuer.organizational_unit
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of issuing certificate authority.
      example: www.example.com
      default_field: false
    - name: enrichments.indicator.x509.issuer.state_or_province
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
      example: California
      default_field: false
    - name: enrichments.indicator.x509.not_after
      level: extended
      type: date
      description: Time at which the certificate is no longer considered valid.
      example: 2020-07-16 03:15:39+00:00
      default_field: false
    - name: enrichments.indicator.x509.not_before
      level: extended
      type: date
      description: Time at which the certificate is first considered valid.
      example: 2019-08-16 01:40:25+00:00
      default_field: false
    - name: enrichments.indicator.x509.public_key_algorithm
      level: extended
      type: keyword
      ignore_above: 1024
      description: Algorithm used to generate the public key.
      example: RSA
      default_field: false
    - name: enrichments.indicator.x509.public_key_curve
      level: extended
      type: keyword
      ignore_above: 1024
      description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
      example: nistp521
      default_field: false
    - name: enrichments.indicator.x509.public_key_exponent
      level: extended
      type: long
      description: Exponent used to derive the public key. This is algorithm specific.
      example: 65537
      index: false
      doc_values: false
      default_field: false
    - name: enrichments.indicator.x509.public_key_size
      level: extended
      type: long
      description: The size of the public key space in bits.
      example: 2048
      default_field: false
    - name: enrichments.indicator.x509.serial_number
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
      example: 55FBB9C7DEBF09809D12CCAA
      default_field: false
    - name: enrichments.indicator.x509.signature_algorithm
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
      example: SHA256-RSA
      default_field: false
    - name: enrichments.indicator.x509.subject.common_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of common names (CN) of subject.
      example: shared.global.example.net
      default_field: false
    - name: enrichments.indicator.x509.subject.country
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of country (C) code
      example: US
      default_field: false
    - name: enrichments.indicator.x509.subject.distinguished_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Distinguished name (DN) of the certificate subject entity.
      example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
      default_field: false
    - name: enrichments.indicator.x509.subject.locality
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
      example: San Francisco
      default_field: false
    - name: enrichments.indicator.x509.subject.organization
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of subject.
      example: Example, Inc.
      default_field: false
    - name: enrichments.indicator.x509.subject.organizational_unit
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of subject.
      default_field: false
    - name: enrichments.indicator.x509.subject.state_or_province
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
      example: California
      default_field: false
    - name: enrichments.indicator.x509.version_number
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of x509 format.
      example: 3
      default_field: false
    - name: enrichments.matched.atomic
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies the atomic indicator value that matched a local environment endpoint or network event.
      example: bad-domain.com
      default_field: false
    - name: enrichments.matched.field
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies the field of the atomic indicator that matched a local environment endpoint or network event.
      example: file.hash.sha256
      default_field: false
    - name: enrichments.matched.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies the _id of the indicator document enriching the event.
      example: ff93aee5-86a1-4a61-b0e6-0cdc313d01b5
      default_field: false
    - name: enrichments.matched.index
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies the _index of the indicator document enriching the event.
      example: filebeat-8.0.0-2021.05.23-000011
      default_field: false
    - name: enrichments.matched.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies the type of match that caused the event to be enriched with the given indicator
      example: indicator_match_rule
      default_field: false
    - name: framework
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
      example: MITRE ATT&CK
    - name: group.alias
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The alias(es) of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group alias(es)."
      example: '[ "Magecart Group 6" ]'
      default_field: false
    - name: group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The id of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group id."
      example: G0037
      default_field: false
    - name: group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The name of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group name."
      example: FIN6
      default_field: false
    - name: group.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The reference URL of the group for a set of related intrusion activity that are tracked by a common name in the security community. While not required, you can use a MITRE ATT&CK® group reference URL."
      example: https://attack.mitre.org/groups/G0037/
      default_field: false
    - name: indicator.as.number
      level: extended
      type: long
      description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      default_field: false
    - name: indicator.as.organization.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Organization name.
      example: Google LLC
      default_field: false
    - name: indicator.confidence
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Identifies the confidence rating assigned by the provider using STIX confidence scales.\nRecommended values:\n  * Not Specified, None, Low, Medium, High\n  * 0-10\n  * Admirality Scale (1-6)\n  * DNI Scale (5-95)\n  * WEP Scale (Impossible - Certain)"
      example: High
      default_field: false
    - name: indicator.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Describes the type of action conducted by the threat.
      example: IP x.x.x.x was observed delivering the Angler EK.
      default_field: false
    - name: indicator.email.address
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifies a threat indicator as an email address (irrespective of direction).
      example: phish@example.com
      default_field: false
    - name: indicator.file.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: indicator.file.Ext.code_signature
      level: custom
      type: nested
      description: Nested version of ECS code_signature fieldset.
      default_field: false
    - name: indicator.file.Ext.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: indicator.file.Ext.code_signature.status
      level: custom
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: indicator.file.Ext.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: indicator.file.Ext.code_signature.trusted
      level: custom
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: indicator.file.Ext.code_signature.valid
      level: custom
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: indicator.file.Ext.entropy
      level: custom
      type: double
      description: Entropy calculation of file's header and footer used to check file integrity.
      default_field: false
    - name: indicator.file.Ext.entry_modified
      level: custom
      type: double
      description: Time of last status change.  See `st_ctim` member of `struct stat`.
      default_field: false
    - name: indicator.file.Ext.header_bytes
      level: custom
      type: keyword
      ignore_above: 1024
      description: First 16 bytes of file used to check file integrity.
      default_field: false
    - name: indicator.file.Ext.header_data
      level: custom
      type: text
      description: First 16 bytes of file used to check file integrity.
      default_field: false
    - name: indicator.file.Ext.malware_classification.features.data.buffer
      level: custom
      type: keyword
      ignore_above: 1024
      description: The features extracted from this file and evaluated by the model.  Usually an array of floats.  Likely zlib-encoded.
      default_field: false
    - name: indicator.file.Ext.malware_classification.features.data.decompressed_size
      level: custom
      type: integer
      description: The decompressed size of buffer.
      default_field: false
    - name: indicator.file.Ext.malware_classification.features.data.encoding
      level: custom
      type: keyword
      ignore_above: 1024
      description: The encoding of buffer (e.g. zlib).
      default_field: false
    - name: indicator.file.Ext.malware_classification.identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: The model's unique identifier.
      default_field: false
    - name: indicator.file.Ext.malware_classification.score
      level: custom
      type: double
      description: The score produced by the classification model.
      default_field: false
    - name: indicator.file.Ext.malware_classification.threshold
      level: custom
      type: double
      description: The score threshold for the model.  Files that score above this threshold are considered malicious.
      default_field: false
    - name: indicator.file.Ext.malware_classification.upx_packed
      level: custom
      type: boolean
      description: Whether UPX packing was detected.
      default_field: false
    - name: indicator.file.Ext.malware_classification.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: The version of the model used.
      default_field: false
    - name: indicator.file.Ext.malware_signature
      level: custom
      type: nested
      description: Nested version of malware_signature fieldset.
      default_field: false
    - name: indicator.file.Ext.malware_signature.all_names
      level: custom
      type: text
      description: The concatenated names of all yara signatures
      default_field: false
    - name: indicator.file.Ext.malware_signature.identifier
      level: custom
      type: text
      description: Malware artifact identifier.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary
      level: custom
      type: nested
      description: Primary malware signature match.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.matches
      level: custom
      type: nested
      description: An array of bytes representing yara signature matches
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.signature
      level: custom
      type: nested
      description: Primary malware signature match.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.signature.hash
      level: custom
      type: nested
      description: Primary malware signature hash.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.signature.hash.sha256
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature sha256.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.signature.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature id.
      default_field: false
    - name: indicator.file.Ext.malware_signature.primary.signature.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature name.
      default_field: false
    - name: indicator.file.Ext.malware_signature.secondary
      level: custom
      type: nested
      description: An array of malware signature matches
      default_field: false
    - name: indicator.file.Ext.malware_signature.version
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary malware signature version.
      default_field: false
    - name: indicator.file.Ext.monotonic_id
      level: custom
      type: unsigned_long
      description: File event monotonic ID.
      default_field: false
    - name: indicator.file.Ext.original
      level: custom
      type: object
      description: Original file information during a modification event.
      default_field: false
    - name: indicator.file.Ext.original.gid
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
      default_field: false
    - name: indicator.file.Ext.original.group
      level: custom
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
      default_field: false
    - name: indicator.file.Ext.original.mode
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file mode prior to a modification event
      default_field: false
    - name: indicator.file.Ext.original.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file name prior to a modification event
      default_field: false
    - name: indicator.file.Ext.original.owner
      level: custom
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
      default_field: false
    - name: indicator.file.Ext.original.path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Original file path prior to a modification event
      default_field: false
    - name: indicator.file.Ext.original.uid
      level: custom
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      default_field: false
    - name: indicator.file.Ext.quarantine_message
      level: custom
      type: keyword
      ignore_above: 1024
      description: Message describing quarantine results.
      default_field: false
    - name: indicator.file.Ext.quarantine_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint the quarantined file was originally.
      default_field: false
    - name: indicator.file.Ext.quarantine_result
      level: custom
      type: boolean
      description: Boolean representing whether or not file quarantine succeeded.
      default_field: false
    - name: indicator.file.Ext.temp_file_path
      level: custom
      type: keyword
      ignore_above: 1024
      description: Path on endpoint where a copy of the file is being stored.  Used to make ephemeral files retrievable.
      default_field: false
    - name: indicator.file.Ext.windows
      level: custom
      type: object
      description: Platform-specific Windows fields
      default_field: false
    - name: indicator.file.Ext.windows.zone_identifier
      level: custom
      type: keyword
      ignore_above: 1024
      description: Windows zone identifier for a file
      default_field: false
    - name: indicator.file.accessed
      level: extended
      type: date
      description: 'Last time the file was accessed.

        Note that not all filesystems keep track of access time.'
      default_field: false
    - name: indicator.file.attributes
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Array of file attributes.

        Attributes names will vary by platform. Here''s a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.'
      example: '["readonly", "system"]'
      default_field: false
    - name: indicator.file.code_signature.exists
      level: core
      type: boolean
      description: Boolean to capture if a signature is present.
      example: 'true'
      default_field: false
    - name: indicator.file.code_signature.signing_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The identifier used to sign the process.

        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.'
      example: com.apple.xpc.proxy
      default_field: false
    - name: indicator.file.code_signature.status
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      default_field: false
    - name: indicator.file.code_signature.subject_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Subject name of the code signer
      example: Microsoft Corporation
      default_field: false
    - name: indicator.file.code_signature.team_id
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The team identifier used to sign the process.

        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.'
      example: EQHXZ8M8AV
      default_field: false
    - name: indicator.file.code_signature.trusted
      level: extended
      type: boolean
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.'
      example: 'true'
      default_field: false
    - name: indicator.file.code_signature.valid
      level: extended
      type: boolean
      description: 'Boolean to capture if the digital signature is verified against the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      default_field: false
    - name: indicator.file.created
      level: extended
      type: date
      description: 'File creation time.

        Note that not all filesystems store the creation time.'
      default_field: false
    - name: indicator.file.ctime
      level: extended
      type: date
      description: 'Last time the file attributes or metadata changed.

        Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.'
      default_field: false
    - name: indicator.file.device
      level: extended
      type: keyword
      ignore_above: 1024
      description: Device that is the source of the file.
      example: sda
      default_field: false
    - name: indicator.file.directory
      level: extended
      type: keyword
      ignore_above: 1024
      description: Directory where the file is located. It should include the drive letter, when appropriate.
      example: /home/alice
      default_field: false
    - name: indicator.file.drive_letter
      level: extended
      type: keyword
      ignore_above: 1
      description: 'Drive letter where the file is located. This field is only relevant on Windows.

        The value should be uppercase, and not include the colon.'
      example: C
      default_field: false
    - name: indicator.file.elf.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: Machine architecture of the ELF file.
      example: x86-64
      default_field: false
    - name: indicator.file.elf.byte_order
      level: extended
      type: keyword
      ignore_above: 1024
      description: Byte sequence of ELF file.
      example: Little Endian
      default_field: false
    - name: indicator.file.elf.cpu_type
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU type of the ELF file.
      example: Intel
      default_field: false
    - name: indicator.file.elf.creation_date
      level: extended
      type: date
      description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      default_field: false
    - name: indicator.file.elf.exports
      level: extended
      type: flattened
      description: List of exported element names and types.
      default_field: false
    - name: indicator.file.elf.header.abi_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of the ELF Application Binary Interface (ABI).
      default_field: false
    - name: indicator.file.elf.header.class
      level: extended
      type: keyword
      ignore_above: 1024
      description: Header class of the ELF file.
      default_field: false
    - name: indicator.file.elf.header.data
      level: extended
      type: keyword
      ignore_above: 1024
      description: Data table of the ELF header.
      default_field: false
    - name: indicator.file.elf.header.entrypoint
      level: extended
      type: long
      format: string
      description: Header entrypoint of the ELF file.
      default_field: false
    - name: indicator.file.elf.header.object_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: '"0x1" for original ELF files.'
      default_field: false
    - name: indicator.file.elf.header.os_abi
      level: extended
      type: keyword
      ignore_above: 1024
      description: Application Binary Interface (ABI) of the Linux OS.
      default_field: false
    - name: indicator.file.elf.header.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: Header type of the ELF file.
      default_field: false
    - name: indicator.file.elf.header.version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of the ELF header.
      default_field: false
    - name: indicator.file.elf.imports
      level: extended
      type: flattened
      description: List of imported element names and types.
      default_field: false
    - name: indicator.file.elf.sections
      level: extended
      type: nested
      description: 'An array containing an object for each section of the ELF file.

        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.'
      default_field: false
    - name: indicator.file.elf.sections.chi2
      level: extended
      type: long
      format: number
      description: Chi-square probability distribution of the section.
      default_field: false
    - name: indicator.file.elf.sections.entropy
      level: extended
      type: long
      format: number
      description: Shannon entropy calculation from the section.
      default_field: false
    - name: indicator.file.elf.sections.flags
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List flags.
      default_field: false
    - name: indicator.file.elf.sections.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List name.
      default_field: false
    - name: indicator.file.elf.sections.physical_offset
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List offset.
      default_field: false
    - name: indicator.file.elf.sections.physical_size
      level: extended
      type: long
      format: bytes
      description: ELF Section List physical size.
      default_field: false
    - name: indicator.file.elf.sections.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF Section List type.
      default_field: false
    - name: indicator.file.elf.sections.virtual_address
      level: extended
      type: long
      format: string
      description: ELF Section List virtual address.
      default_field: false
    - name: indicator.file.elf.sections.virtual_size
      level: extended
      type: long
      format: string
      description: ELF Section List virtual size.
      default_field: false
    - name: indicator.file.elf.segments
      level: extended
      type: nested
      description: 'An array containing an object for each segment of the ELF file.

        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.'
      default_field: false
    - name: indicator.file.elf.segments.sections
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF object segment sections.
      default_field: false
    - name: indicator.file.elf.segments.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: ELF object segment type.
      default_field: false
    - name: indicator.file.elf.shared_libraries
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of shared libraries used by this ELF object.
      default_field: false
    - name: indicator.file.elf.telfhash
      level: extended
      type: keyword
      ignore_above: 1024
      description: telfhash symbol hash for ELF file.
      default_field: false
    - name: indicator.file.extension
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'File extension, excluding the leading dot.

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
      example: png
      default_field: false
    - name: indicator.file.gid
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group ID (GID) of the file.
      example: '1001'
      default_field: false
    - name: indicator.file.group
      level: extended
      type: keyword
      ignore_above: 1024
      description: Primary group name of the file.
      example: alice
      default_field: false
    - name: indicator.file.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: indicator.file.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: indicator.file.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: indicator.file.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: indicator.file.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: indicator.file.inode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Inode representing the file in the filesystem.
      example: '256383'
      default_field: false
    - name: indicator.file.mime_type
      level: extended
      type: keyword
      ignore_above: 1024
      description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
      default_field: false
    - name: indicator.file.mode
      level: extended
      type: keyword
      ignore_above: 1024
      description: Mode of the file in octal representation.
      example: '0640'
      default_field: false
    - name: indicator.file.mtime
      level: extended
      type: date
      description: Last time the file content was modified.
      default_field: false
    - name: indicator.file.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the file including the extension, without the directory.
      example: example.png
      default_field: false
    - name: indicator.file.owner
      level: extended
      type: keyword
      ignore_above: 1024
      description: File owner's username.
      example: alice
      default_field: false
    - name: indicator.file.path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
      example: /home/alice/example.png
      default_field: false
    - name: indicator.file.pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: indicator.file.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: indicator.file.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: indicator.file.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: indicator.file.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: indicator.file.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: indicator.file.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: indicator.file.size
      level: extended
      type: long
      description: 'File size in bytes.

        Only relevant when `file.type` is "file".'
      example: 16384
      default_field: false
    - name: indicator.file.target_path
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: caseless
          type: keyword
          normalizer: lowercase
          ignore_above: 1024
        - name: text
          type: text
          norms: false
      description: Target path for symlinks.
      default_field: false
    - name: indicator.file.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: File type (file, dir, or symlink).
      example: file
      default_field: false
    - name: indicator.file.uid
      level: extended
      type: keyword
      ignore_above: 1024
      description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      default_field: false
    - name: indicator.first_seen
      level: extended
      type: date
      description: The date and time when intelligence source first reported sighting this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: indicator.geo.city_name
      level: core
      type: keyword
      ignore_above: 1024
      description: City name.
      example: Montreal
      default_field: false
    - name: indicator.geo.continent_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Two-letter code representing continent's name.
      example: NA
      default_field: false
    - name: indicator.geo.continent_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
      example: North America
      default_field: false
    - name: indicator.geo.country_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
      example: CA
      default_field: false
    - name: indicator.geo.country_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Country name.
      example: Canada
      default_field: false
    - name: indicator.geo.location
      level: core
      type: geo_point
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      default_field: false
    - name: indicator.geo.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'User-defined description of a location, at the level of granularity they care about.

        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      default_field: false
    - name: indicator.geo.postal_code
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.'
      example: 94040
      default_field: false
    - name: indicator.geo.region_iso_code
      level: core
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
      example: CA-QC
      default_field: false
    - name: indicator.geo.region_name
      level: core
      type: keyword
      ignore_above: 1024
      description: Region name.
      example: Quebec
      default_field: false
    - name: indicator.geo.timezone
      level: core
      type: keyword
      ignore_above: 1024
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      default_field: false
    - name: indicator.hash.md5
      level: extended
      type: keyword
      ignore_above: 1024
      description: MD5 hash.
      default_field: false
    - name: indicator.hash.sha1
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA1 hash.
      default_field: false
    - name: indicator.hash.sha256
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA256 hash.
      default_field: false
    - name: indicator.hash.sha512
      level: extended
      type: keyword
      ignore_above: 1024
      description: SHA512 hash.
      default_field: false
    - name: indicator.hash.ssdeep
      level: extended
      type: keyword
      ignore_above: 1024
      description: SSDEEP hash.
      default_field: false
    - name: indicator.ip
      level: extended
      type: ip
      description: Identifies a threat indicator as an IP address (irrespective of direction).
      example: 1.2.3.4
      default_field: false
    - name: indicator.last_seen
      level: extended
      type: date
      description: The date and time when intelligence source last reported sighting this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: indicator.marking.tlp
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Traffic Light Protocol sharing markings.\nRecommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED"
      example: WHITE
      default_field: false
    - name: indicator.modified_at
      level: extended
      type: date
      description: The date and time when intelligence source last modified information for this indicator.
      example: '2020-11-05T17:25:47.000Z'
      default_field: false
    - name: indicator.pe.architecture
      level: extended
      type: keyword
      ignore_above: 1024
      description: CPU architecture target for the file.
      example: x64
      default_field: false
    - name: indicator.pe.company
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      default_field: false
    - name: indicator.pe.description
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal description of the file, provided at compile-time.
      example: Paint
      default_field: false
    - name: indicator.pe.file_version
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      default_field: false
    - name: indicator.pe.imphash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.

        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.'
      example: 0c6803c4e922103c4dca5963aad36ddf
      default_field: false
    - name: indicator.pe.original_file_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      default_field: false
    - name: indicator.pe.product
      level: extended
      type: keyword
      ignore_above: 1024
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft® Windows® Operating System"
      default_field: false
    - name: indicator.port
      level: extended
      type: long
      description: Identifies a threat indicator as a port number (irrespective of direction).
      example: 443
      default_field: false
    - name: indicator.provider
      level: extended
      type: keyword
      ignore_above: 1024
      description: The name of the indicator's provider.
      example: lrz_urlhaus
      default_field: false
    - name: indicator.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: Reference URL linking to additional information about this indicator.
      example: https://system.example.com/indicator/0001234
      default_field: false
    - name: indicator.registry.data.bytes
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Original bytes written with base64 encoding.

        For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.'
      example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
      default_field: false
    - name: indicator.registry.data.strings
      level: core
      type: keyword
      ignore_above: 1024
      description: 'Content when writing string types.

        Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).'
      example: '["C:\rta\red_ttp\bin\myapp.exe"]'
      default_field: false
    - name: indicator.registry.data.type
      level: core
      type: keyword
      ignore_above: 1024
      description: Standard registry type for encoding contents
      example: REG_SZ
      default_field: false
    - name: indicator.registry.hive
      level: core
      type: keyword
      ignore_above: 1024
      description: Abbreviated name for the hive.
      example: HKLM
      default_field: false
    - name: indicator.registry.key
      level: core
      type: keyword
      ignore_above: 1024
      description: Hive-relative path of keys.
      example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
      default_field: false
    - name: indicator.registry.path
      level: core
      type: keyword
      ignore_above: 1024
      description: Full path, including hive, key and value
      example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
      default_field: false
    - name: indicator.registry.value
      level: core
      type: keyword
      ignore_above: 1024
      description: Name of the value written.
      example: Debugger
      default_field: false
    - name: indicator.scanner_stats
      level: extended
      type: long
      description: Count of AV/EDR vendors that successfully detected malicious file or URL.
      example: 4
      default_field: false
    - name: indicator.sightings
      level: extended
      type: long
      description: Number of times this indicator was observed conducting threat activity.
      example: 20
      default_field: false
    - name: indicator.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Type of indicator as represented by Cyber Observable in STIX 2.0.\nRecommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate"
      example: ipv4-addr
      default_field: false
    - name: indicator.url.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Domain of the url, such as "www.elastic.co".

        In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.

        If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.'
      example: www.elastic.co
      default_field: false
    - name: indicator.url.extension
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The field contains the file extension from the original request url, excluding the leading dot.

        The file extension is only set if it exists, as not every url has a file extension.

        The leading period must not be included. For example, the value must be "png", not ".png".

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
      example: png
      default_field: false
    - name: indicator.url.fragment
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Portion of the url after the `#`, such as "top".

        The `#` is not part of the fragment.'
      default_field: false
    - name: indicator.url.full
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
      example: https://www.elastic.co:443/search?q=elasticsearch#top
      default_field: false
    - name: indicator.url.original
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: 'Unmodified original url as seen in the event source.

        Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.

        This field is meant to represent the URL as it was observed, complete or not.'
      example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch
      default_field: false
    - name: indicator.url.password
      level: extended
      type: keyword
      ignore_above: 1024
      description: Password of the request.
      default_field: false
    - name: indicator.url.path
      level: extended
      type: keyword
      ignore_above: 1024
      description: Path of the request, such as "/search".
      default_field: false
    - name: indicator.url.port
      level: extended
      type: long
      format: string
      description: Port of the request, such as 443.
      example: 443
      default_field: false
    - name: indicator.url.query
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The query field describes the query string of the request, such as "q=elasticsearch".

        The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.'
      default_field: false
    - name: indicator.url.registered_domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The highest registered url domain, stripped of the subdomain.

        For example, the registered domain for "foo.example.com" is "example.com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".'
      example: example.com
      default_field: false
    - name: indicator.url.scheme
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Scheme of the request, such as "https".

        Note: The `:` is not part of the scheme.'
      example: https
      default_field: false
    - name: indicator.url.subdomain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.

        For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.'
      example: east
      default_field: false
    - name: indicator.url.top_level_domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      default_field: false
    - name: indicator.url.username
      level: extended
      type: keyword
      ignore_above: 1024
      description: Username of the request.
      default_field: false
    - name: indicator.x509.alternative_names
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
      example: '*.elastic.co'
      default_field: false
    - name: indicator.x509.issuer.common_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of common name (CN) of issuing certificate authority.
      example: Example SHA2 High Assurance Server CA
      default_field: false
    - name: indicator.x509.issuer.country
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of country (C) codes
      example: US
      default_field: false
    - name: indicator.x509.issuer.distinguished_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Distinguished name (DN) of issuing certificate authority.
      example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
      default_field: false
    - name: indicator.x509.issuer.locality
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
      example: Mountain View
      default_field: false
    - name: indicator.x509.issuer.organization
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of issuing certificate authority.
      example: Example Inc
      default_field: false
    - name: indicator.x509.issuer.organizational_unit
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of issuing certificate authority.
      example: www.example.com
      default_field: false
    - name: indicator.x509.issuer.state_or_province
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
      example: California
      default_field: false
    - name: indicator.x509.not_after
      level: extended
      type: date
      description: Time at which the certificate is no longer considered valid.
      example: 2020-07-16 03:15:39+00:00
      default_field: false
    - name: indicator.x509.not_before
      level: extended
      type: date
      description: Time at which the certificate is first considered valid.
      example: 2019-08-16 01:40:25+00:00
      default_field: false
    - name: indicator.x509.public_key_algorithm
      level: extended
      type: keyword
      ignore_above: 1024
      description: Algorithm used to generate the public key.
      example: RSA
      default_field: false
    - name: indicator.x509.public_key_curve
      level: extended
      type: keyword
      ignore_above: 1024
      description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
      example: nistp521
      default_field: false
    - name: indicator.x509.public_key_exponent
      level: extended
      type: long
      description: Exponent used to derive the public key. This is algorithm specific.
      example: 65537
      index: false
      doc_values: false
      default_field: false
    - name: indicator.x509.public_key_size
      level: extended
      type: long
      description: The size of the public key space in bits.
      example: 2048
      default_field: false
    - name: indicator.x509.serial_number
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
      example: 55FBB9C7DEBF09809D12CCAA
      default_field: false
    - name: indicator.x509.signature_algorithm
      level: extended
      type: keyword
      ignore_above: 1024
      description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
      example: SHA256-RSA
      default_field: false
    - name: indicator.x509.subject.common_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of common names (CN) of subject.
      example: shared.global.example.net
      default_field: false
    - name: indicator.x509.subject.country
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of country (C) code
      example: US
      default_field: false
    - name: indicator.x509.subject.distinguished_name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Distinguished name (DN) of the certificate subject entity.
      example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
      default_field: false
    - name: indicator.x509.subject.locality
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
      example: San Francisco
      default_field: false
    - name: indicator.x509.subject.organization
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of subject.
      example: Example, Inc.
      default_field: false
    - name: indicator.x509.subject.organizational_unit
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of subject.
      default_field: false
    - name: indicator.x509.subject.state_or_province
      level: extended
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
      example: California
      default_field: false
    - name: indicator.x509.version_number
      level: extended
      type: keyword
      ignore_above: 1024
      description: Version of x509 format.
      example: 3
      default_field: false
    - name: software.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The id of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software id."
      example: S0552
      default_field: false
    - name: software.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software name."
      example: AdFind
      default_field: false
    - name: software.platforms
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software platforms.\nRecommended Values:\n  * AWS\n  * Azure\n  * Azure AD\n  * GCP\n  * Linux\n  * macOS\n  * Network\n  * Office 365\n  * SaaS\n  * Windows"
      example: '[ "Windows" ]'
      default_field: false
    - name: software.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software reference URL."
      example: https://attack.mitre.org/software/S0552/
      default_field: false
    - name: software.type
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®. While not required, you can use a MITRE ATT&CK® software type.\nRecommended values\n  * Malware\n  * Tool"
      example: Tool
      default_field: false
    - name: tactic.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )"
      example: TA0002
    - name: tactic.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: "Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)"
      example: Execution
    - name: tactic.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )"
      example: https://attack.mitre.org/tactics/TA0002/
    - name: technique.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"
      example: T1059
    - name: technique.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: "The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"
      example: Command and Scripting Interpreter
    - name: technique.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)"
      example: https://attack.mitre.org/techniques/T1059/
    - name: technique.subtechnique.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"
      example: T1059.001
      default_field: false
    - name: technique.subtechnique.name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
      description: "The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"
      example: PowerShell
      default_field: false
    - name: technique.subtechnique.reference
      level: extended
      type: keyword
      ignore_above: 1024
      description: "The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)"
      example: https://attack.mitre.org/techniques/T1059/001/
      default_field: false
- name: user
  title: User
  group: 2
  description: 'The user fields describe information about the user that is relevant to the event.

    Fields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.'
  type: group
  fields:
    - name: Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: Ext.real
      level: custom
      type: object
      description: User info prior to any setuid operations.
      default_field: false
    - name: Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: One or multiple unique identifiers of the user.
      default_field: false
    - name: Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Short name or login of the user.
      default_field: false
    - name: domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: email
      level: extended
      type: keyword
      ignore_above: 1024
      description: User email address.
    - name: full_name
      level: extended
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: User's full name, if available.
      example: Albert Einstein
    - name: group.Ext
      level: custom
      type: object
      description: Object for all custom defined fields to live in.
      default_field: false
    - name: group.Ext.real
      level: custom
      type: object
      description: Group info prior to any setgid operations.
      default_field: false
    - name: group.Ext.real.id
      level: custom
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
      default_field: false
    - name: group.Ext.real.name
      level: custom
      type: keyword
      ignore_above: 1024
      description: Name of the group.
      default_field: false
    - name: group.domain
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
    - name: group.id
      level: extended
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the group on the system/platform.
    - name: group.name
      level: extended
      type: keyword
      ignore_above: 1024
      description: Name of the group.
    - name: hash
      level: extended
      type: keyword
      ignore_above: 1024
      description: 'Unique user hash to correlate information for a user in anonymized form.

        Useful if `user.id` or `user.name` contain confidential information and cannot be used.'
    - name: id
      level: core
      type: keyword
      ignore_above: 1024
      description: Unique identifier of the user.
    - name: name
      level: core
      type: keyword
      ignore_above: 1024
      multi_fields:
        - name: text
          type: text
          norms: false
          default_field: false
      description: Short name or login of the user.
      example: albert
